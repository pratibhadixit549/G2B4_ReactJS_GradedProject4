{"ast":null,"code":"var _jsxFileName = \"E:\\\\personal-projects\\\\G1-S5_ReactJS_GradedProject4\\\\GradedProject_ReactJS\\\\client\\\\src\\\\component\\\\moviesDetails\\\\MoviesDetails.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { Alert, Col, Row } from \"react-bootstrap\";\nimport LoadingIndicator from \"../common/LoadingIndicator\";\nimport { getMovieByTitle } from \"../../services/movies\";\nimport NoDataMatched from \"../global/NoDataMatched\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MoviesDetails = props => {\n  _s();\n\n  var _error$message;\n\n  const [status, setStatus] = useState(\"LOADING\");\n  const [movies, setMovies] = useState(null);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchMovie = async () => {\n      try {\n        const data = await getMovieByTitle(props.match.params.moviesCategory, props.match.params.path);\n        setMovies(data);\n        setStatus(\"LOADED\");\n      } catch (errormsg) {\n        setError(errormsg);\n        setStatus(\"LOADING_ERROR\");\n      }\n    };\n\n    fetchMovie();\n  }, [props.match.params.path, props.match.params.moviesCategory]);\n  let el;\n\n  switch (status) {\n    case \"LOADING\":\n      el = /*#__PURE__*/_jsxDEV(LoadingIndicator, {\n        size: \"large\",\n        message: \"Loading Libraries. Please wait....\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 18\n      }, this);\n      break;\n\n    case \"LOADED\":\n      if (movies === null) {\n        el = /*#__PURE__*/_jsxDEV(NoDataMatched, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this);\n        break;\n      }\n\n      const {\n        title,\n        storyline,\n        poster,\n        posterurl,\n        duration,\n        releaseDate,\n        actors,\n        year,\n        imdbRating,\n        contentRating,\n        averageRating,\n        genres\n      } = movies;\n\n      if (title === null) {\n        el = /*#__PURE__*/_jsxDEV(NoDataMatched, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this);\n        break;\n      }\n\n      const imageClick = () => {\n        return /*#__PURE__*/_jsxDEV(\"img\", {\n          src: `${posterurl}`,\n          alt: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this);\n      };\n\n      el = /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/movies-coming\",\n          children: \"Back To Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          className: \"mx-3 my-5 m\",\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            xs: 12,\n            lg: 3,\n            className: \"my-3\",\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: `${process.env.REACT_APP_API_BASE_URL}/img/${poster}`,\n              alt: title,\n              className: \"w-100\",\n              onClick: () => imageClick()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            xs: 12,\n            lg: 8,\n            className: \"my-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                children: [title, \" (\", year, \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"my-4\",\n              children: [/*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  xs: 3,\n                  children: \"Imdb Rating\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  xs: 8,\n                  children: imdbRating\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Row, {\n                className: \"my-2\",\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  xs: 3,\n                  children: \"Content Rating\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 108,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  xs: 8,\n                  children: contentRating\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 111,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Row, {\n                className: \"my-2\",\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  xs: 3,\n                  children: \"Average Rating\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  xs: 8,\n                  children: averageRating\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 119,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Row, {\n                className: \"my-2\",\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  xs: 3,\n                  children: \"Duration\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 124,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  xs: 8,\n                  children: duration\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 127,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Row, {\n                className: \"my-2\",\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  xs: 3,\n                  children: \"Genres\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 132,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  xs: 8,\n                  children: genres.map(genres => /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"me-2\",\n                    children: genres\n                  }, genres, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 139,\n                    columnNumber: 53\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 135,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Row, {\n                className: \"my-2\",\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  xs: 3,\n                  children: \"Actors\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 149,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  xs: 8,\n                  children: actors.map(actors => /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"me-2\",\n                    children: actors\n                  }, actors, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 156,\n                    columnNumber: 53\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 152,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Row, {\n                className: \"my-2\",\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  xs: 3,\n                  children: \"Released Date\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 166,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  xs: 8,\n                  children: releaseDate\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 169,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Row, {\n                className: \"my-2\",\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  xs: 3,\n                  children: \"Story Line\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 174,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  xs: 8,\n                  children: storyline\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 177,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this);\n      break;\n\n    case \"LOADING_ERROR\":\n      let msg = (_error$message = error === null || error === void 0 ? void 0 : error.message) !== null && _error$message !== void 0 ? _error$message : '';\n\n      if ((msg === null || msg === void 0 ? void 0 : msg.indexOf(\"404\")) > -1) {\n        el = /*#__PURE__*/_jsxDEV(NoDataMatched, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 21\n        }, this);\n      } else {\n        el = /*#__PURE__*/_jsxDEV(Alert, {\n          variant: \"danger\",\n          children: error === null || error === void 0 ? void 0 : error.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 21\n        }, this);\n      }\n\n      break;\n  }\n\n  return el;\n};\n\n_s(MoviesDetails, \"PIlNkyEKrrl7JSXCciToVugAf0I=\");\n\n_c = MoviesDetails;\nexport default MoviesDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MoviesDetails\");","map":{"version":3,"sources":["E:/personal-projects/G1-S5_ReactJS_GradedProject4/GradedProject_ReactJS/client/src/component/moviesDetails/MoviesDetails.tsx"],"names":["useEffect","useState","Alert","Col","Row","LoadingIndicator","getMovieByTitle","NoDataMatched","Link","MoviesDetails","props","status","setStatus","movies","setMovies","error","setError","fetchMovie","data","match","params","moviesCategory","path","errormsg","el","title","storyline","poster","posterurl","duration","releaseDate","actors","year","imdbRating","contentRating","averageRating","genres","imageClick","process","env","REACT_APP_API_BASE_URL","map","msg","message","indexOf"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { RouteComponentProps } from \"react-router\";\r\nimport { Alert, Col, Row } from \"react-bootstrap\";\r\nimport { LoadingStatus } from \"../../services/types\";\r\nimport IMovies from \"../../model/IMovies\";\r\nimport LoadingIndicator from \"../common/LoadingIndicator\";\r\nimport { getMovieByTitle } from \"../../services/movies\";\r\nimport NoDataMatched from \"../global/NoDataMatched\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\ntype Props = {\r\n    moviesCategory: string,\r\n    path: string\r\n}\r\nconst MoviesDetails = (props: RouteComponentProps<Props>) => {\r\n    const [status, setStatus] = useState<LoadingStatus>(\"LOADING\")\r\n    const [movies, setMovies] = useState<IMovies | null>(null)\r\n    const [error, setError] = useState<Error | null>(null)\r\n\r\n    useEffect(() => {\r\n        const fetchMovie = async () => {\r\n            try {\r\n                const data = await getMovieByTitle(props.match.params.moviesCategory, props.match.params.path);\r\n                setMovies(data);\r\n                setStatus(\"LOADED\");\r\n            }\r\n            catch (errormsg: any) {\r\n                setError(errormsg)\r\n                setStatus(\"LOADING_ERROR\")\r\n            }\r\n        }\r\n\r\n        fetchMovie();\r\n    }, [props.match.params.path, props.match.params.moviesCategory])\r\n\r\n    let el\r\n\r\n    switch (status) {\r\n        case \"LOADING\":\r\n            el = <LoadingIndicator size=\"large\" message=\"Loading Libraries. Please wait....\" />;\r\n            break;\r\n        case \"LOADED\":\r\n\r\n            if (movies === null) {\r\n                el = (\r\n                    <NoDataMatched />\r\n                );\r\n                break;\r\n            }\r\n\r\n            const { title,\r\n                storyline,\r\n                poster,\r\n                posterurl,\r\n                duration,\r\n                releaseDate,\r\n                actors,\r\n                year,\r\n                imdbRating,\r\n                contentRating,\r\n                averageRating,\r\n                genres } = movies as IMovies;\r\n\r\n            if (title === null) {\r\n                el = (\r\n                    <NoDataMatched />\r\n                );\r\n                break;\r\n            }\r\n\r\n            const imageClick = () => {\r\n                return (\r\n                    <img\r\n                        src={`${posterurl}`}\r\n                        alt={title}\r\n                    />\r\n                );\r\n            };\r\n\r\n            el = (\r\n                <div>\r\n                    <Link to=\"/movies-coming\" >Back To Home</Link>\r\n                    <Row className=\"mx-3 my-5 m\">\r\n                        <Col xs={12} lg={3} className=\"my-3\">\r\n                            <img\r\n                                src={`${process.env.REACT_APP_API_BASE_URL}/img/${poster}`}\r\n                                alt={title}\r\n                                className=\"w-100\"\r\n                                onClick={() => imageClick()}\r\n                            />\r\n                        </Col>\r\n                        <Col xs={12} lg={8} className=\"my-3\">\r\n                            <div>\r\n                                <h2>\r\n                                    {title} ({year})\r\n                                </h2>\r\n                            </div>\r\n                            <div className=\"my-4\">\r\n                                <Row>\r\n                                    <Col xs={3}>\r\n                                        Imdb Rating\r\n                                    </Col>\r\n                                    <Col xs={8}>\r\n                                        {imdbRating}\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row className=\"my-2\">\r\n                                    <Col xs={3}>\r\n                                        Content Rating\r\n                                    </Col>\r\n                                    <Col xs={8}>\r\n                                        {contentRating}\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row className=\"my-2\">\r\n                                    <Col xs={3}>\r\n                                        Average Rating\r\n                                    </Col>\r\n                                    <Col xs={8}>\r\n                                        {averageRating}\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row className=\"my-2\">\r\n                                    <Col xs={3}>\r\n                                        Duration\r\n                                    </Col>\r\n                                    <Col xs={8}>\r\n                                        {duration}\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row className=\"my-2\">\r\n                                    <Col xs={3}>\r\n                                        Genres\r\n                                    </Col>\r\n                                    <Col xs={8}>\r\n                                        {\r\n                                            genres.map(\r\n                                                genres => (\r\n                                                    <span className=\"me-2\"\r\n                                                        key={genres}>\r\n                                                        {genres}\r\n                                                    </span>\r\n                                                )\r\n                                            )\r\n                                        }\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row className=\"my-2\">\r\n                                    <Col xs={3}>\r\n                                        Actors\r\n                                    </Col>\r\n                                    <Col xs={8}>\r\n                                        {\r\n                                            actors.map(\r\n                                                actors => (\r\n                                                    <span className=\"me-2\"\r\n                                                        key={actors}>\r\n                                                        {actors}\r\n                                                    </span>\r\n                                                )\r\n                                            )\r\n                                        }\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row className=\"my-2\">\r\n                                    <Col xs={3}>\r\n                                        Released Date\r\n                                    </Col>\r\n                                    <Col xs={8}>\r\n                                        {releaseDate}\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row className=\"my-2\">\r\n                                    <Col xs={3}>\r\n                                        Story Line\r\n                                    </Col>\r\n                                    <Col xs={8}>\r\n                                        {storyline}\r\n                                    </Col>\r\n                                </Row>\r\n                            </div>\r\n                        </Col>\r\n                    </Row>\r\n                </div>\r\n            );\r\n            break;\r\n\r\n        case \"LOADING_ERROR\":\r\n            let msg = error?.message ?? '';\r\n\r\n            if (msg?.indexOf(\"404\") > -1) {\r\n                el = (\r\n                    <NoDataMatched />\r\n                )\r\n            } else {\r\n                el = (\r\n                    <Alert variant=\"danger\">\r\n                        {error?.message}\r\n                    </Alert>\r\n                )\r\n            }\r\n            break;\r\n    }\r\n\r\n    return el;\r\n}\r\n\r\nexport default MoviesDetails"]},"metadata":{},"sourceType":"module"}