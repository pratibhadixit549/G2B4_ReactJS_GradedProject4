{"ast":null,"code":"var _jsxFileName = \"E:\\\\Full-Stack-Project\\\\project-movie-app\\\\client\\\\src\\\\component\\\\moviesList\\\\MoviesList.tsx\";\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Component } from \"react\";\nimport { Alert, Col, Row } from \"react-bootstrap\";\nimport { getMovies } from \"../../services/movies\";\nimport LoadingIndicator from \"../common/LoadingIndicator\";\nimport NoDataMatched from \"../global/NoDataMatched\";\nimport MovieListItem from \"./MovieListItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass MoviesList extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      status: 'LOADING',\n      searchString: '',\n      currentPage: 1,\n      moviesPerPage: 20\n    };\n\n    this.updateValue = event => {\n      const {\n        value\n      } = event.target;\n      this.setState(() => {\n        return {\n          searchString: value\n        };\n      }, () => {\n        this.searchMovie(this.state.searchString);\n      });\n    };\n\n    this.removeMovieFromFavourite = title => {\n      var _this$state$moviesToS;\n\n      this.setState({\n        status: 'LOADING'\n      });\n      const moviesToShow = (_this$state$moviesToS = this.state.moviesToShow) === null || _this$state$moviesToS === void 0 ? void 0 : _this$state$moviesToS.filter(movie => movie.title !== title);\n      this.setState({\n        status: 'LOADED',\n        moviesToShow\n      });\n    };\n\n    this.reloadMovieList = async () => {\n      this.setState({\n        status: 'LOADING'\n      });\n\n      try {\n        const movies = await getMovies(this.props.match.params.moviesCategory);\n        const moviesToShow = movies;\n        this.setState({\n          status: 'LOADED',\n          movies,\n          moviesToShow\n        });\n      } catch (error) {\n        this.setState({\n          status: 'LOADING_ERROR',\n          error: error\n        });\n      }\n    };\n  }\n\n  searchMovie(searchString) {\n    var _this$state$movies;\n\n    this.setState({\n      status: 'LOADING'\n    });\n    const moviesToShow = (_this$state$movies = this.state.movies) === null || _this$state$movies === void 0 ? void 0 : _this$state$movies.filter(x => {\n      return x.title.toLowerCase().includes(searchString.toLowerCase());\n    });\n    this.setState({\n      status: 'LOADED',\n      moviesToShow\n    });\n  }\n\n  render() {\n    var _error$message;\n\n    const {\n      status,\n      moviesToShow,\n      error,\n      searchString\n    } = this.state;\n    let el;\n\n    switch (status) {\n      case 'LOADING':\n        el = /*#__PURE__*/_jsxDEV(LoadingIndicator, {\n          size: \"large\",\n          message: \"We are Fetching the List of Movies. Please wait....\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 21\n        }, this);\n        break;\n\n      case 'LOADING_ERROR':\n        let msg = (_error$message = error === null || error === void 0 ? void 0 : error.message) !== null && _error$message !== void 0 ? _error$message : '';\n\n        if ((msg === null || msg === void 0 ? void 0 : msg.indexOf(\"404\")) > -1) {\n          el = /*#__PURE__*/_jsxDEV(NoDataMatched, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 25\n          }, this);\n        } else {\n          el = /*#__PURE__*/_jsxDEV(Alert, {\n            variant: \"danger\",\n            children: error === null || error === void 0 ? void 0 : error.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 25\n          }, this);\n        }\n\n        break;\n\n      case 'LOADED':\n        el = /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \" me-3 my-3  \",\n            children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faSearch,\n              className: \"ms-4 me-1\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              placeholder: \"Type to Search here...\",\n              className: \"ms-2\",\n              value: searchString,\n              onChange: this.updateValue\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Row, {\n            xs: 2,\n            md: 3,\n            lg: 5,\n            children: moviesToShow === null || moviesToShow === void 0 ? void 0 : moviesToShow.map((movies, idx) => /*#__PURE__*/_jsxDEV(Col, {\n              className: \"d-flex align-items-stretch my-3\",\n              children: /*#__PURE__*/_jsxDEV(MovieListItem, {\n                movies: movies,\n                path: this.props.match.params.moviesCategory,\n                onRemove: this.removeMovieFromFavourite\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 45\n              }, this)\n            }, idx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 41\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true);\n        break;\n\n      default:\n        break;\n    }\n\n    return el;\n  }\n\n  async componentDidMount() {\n    await this.reloadMovieList();\n  }\n\n  async componentDidUpdate(prevProps) {\n    if (this.props.match.params.moviesCategory !== prevProps.match.params.moviesCategory) {\n      await this.reloadMovieList();\n    }\n  }\n\n}\n\nexport default MoviesList;","map":{"version":3,"sources":["E:/Full-Stack-Project/project-movie-app/client/src/component/moviesList/MoviesList.tsx"],"names":["faSearch","FontAwesomeIcon","Component","Alert","Col","Row","getMovies","LoadingIndicator","NoDataMatched","MovieListItem","MoviesList","state","status","searchString","currentPage","moviesPerPage","updateValue","event","value","target","setState","searchMovie","removeMovieFromFavourite","title","moviesToShow","filter","movie","reloadMovieList","movies","props","match","params","moviesCategory","error","x","toLowerCase","includes","render","el","msg","message","indexOf","map","idx","componentDidMount","componentDidUpdate","prevProps"],"mappings":"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","sourcesContent":["import { faSearch } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Component } from \"react\";\r\nimport { Alert, Col, Row } from \"react-bootstrap\";\r\nimport { RouteComponentProps } from \"react-router\";\r\nimport IMovies from \"../../model/IMovies\";\r\nimport { getMovies } from \"../../services/movies\";\r\nimport { LoadingStatus } from \"../../services/types\";\r\nimport LoadingIndicator from \"../common/LoadingIndicator\";\r\nimport NoDataMatched from \"../global/NoDataMatched\";\r\nimport MovieListItem from \"./MovieListItem\";\r\n\r\ntype State = {\r\n    status: LoadingStatus;\r\n    movies?: IMovies[];\r\n    moviesToShow?: IMovies[];\r\n    error?: Error;\r\n    searchString: string;\r\n    currentPage: number;\r\n    moviesPerPage: number;\r\n  };\r\n\r\ntype Props = {\r\n    moviesCategory: string\r\n}\r\n\r\nclass MoviesList extends Component<RouteComponentProps<Props>, State> {\r\n    state: State = {\r\n        status: 'LOADING',\r\n        searchString: '',\r\n        currentPage: 1,\r\n        moviesPerPage: 20,\r\n    };\r\n\r\n    updateValue = (event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) => {\r\n        const { value } = event.target;\r\n\r\n        this.setState(\r\n            () => {\r\n                return {\r\n                    searchString: value\r\n                }\r\n            },\r\n            () => {\r\n                this.searchMovie(this.state.searchString);\r\n            }\r\n        )\r\n    }\r\n\r\n    searchMovie(searchString: string) {\r\n        this.setState({\r\n            status: 'LOADING'\r\n        });\r\n\r\n        const moviesToShow = this.state.movies?.filter(x => {\r\n            return x.title.toLowerCase().includes(searchString.toLowerCase());\r\n        })\r\n        this.setState({\r\n            status: 'LOADED',\r\n            moviesToShow\r\n        });\r\n    }\r\n\r\n    removeMovieFromFavourite = (title: string) => {\r\n\r\n        this.setState({\r\n            status: 'LOADING'\r\n        });\r\n\r\n        const moviesToShow = this.state.moviesToShow?.filter((movie) => movie.title !== title);\r\n\r\n        this.setState({\r\n            status: 'LOADED',\r\n            moviesToShow\r\n        });\r\n    }\r\n\r\n\r\n    render() {\r\n        const { status, moviesToShow, error, searchString } = this.state;\r\n\r\n        let el;\r\n\r\n        switch (status) {\r\n            case 'LOADING':\r\n                el = (\r\n                    <LoadingIndicator\r\n                        size=\"large\"\r\n                        message=\"We are Fetching the List of Movies. Please wait....\"\r\n                    />\r\n                );\r\n                break;\r\n            case 'LOADING_ERROR':\r\n                let msg = error?.message ?? '';\r\n\r\n                if (msg?.indexOf(\"404\") > -1) {\r\n                    el = (\r\n                        <NoDataMatched />\r\n                    )\r\n                } else {\r\n                    el = (\r\n                        <Alert variant=\"danger\">\r\n                            {error?.message}\r\n                        </Alert>\r\n                    )\r\n                }\r\n                break;\r\n            case 'LOADED':\r\n                el = (\r\n                    <>\r\n                        <div className=' me-3 my-3  '>\r\n                            <FontAwesomeIcon icon={faSearch} className=\"ms-4 me-1\" />\r\n                            <input\r\n                                placeholder='Type to Search here...'\r\n                                className='ms-2'\r\n                                value={searchString}\r\n                                onChange={this.updateValue}\r\n                            />\r\n                        </div>\r\n                        <Row xs={2} md={3} lg={5} >\r\n                            {\r\n                                moviesToShow?.map(\r\n                                    (movies, idx) => (\r\n                                        <Col key={idx} className=\"d-flex align-items-stretch my-3\">\r\n                                            <MovieListItem movies={movies} path={this.props.match.params.moviesCategory} onRemove={this.removeMovieFromFavourite} />\r\n                                        </Col>\r\n                                    )\r\n                                )\r\n                            }\r\n                        </Row>\r\n                    </>\r\n                );\r\n\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        return el;\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await this.reloadMovieList();\r\n    }\r\n\r\n    async componentDidUpdate(prevProps: RouteComponentProps<Props>) {\r\n        if (this.props.match.params.moviesCategory !== prevProps.match.params.moviesCategory) {\r\n            await this.reloadMovieList();\r\n        }\r\n    }\r\n\r\n    reloadMovieList = async () => {\r\n        this.setState({\r\n            status: 'LOADING'\r\n        });\r\n\r\n        try {\r\n            const movies = await getMovies(this.props.match.params.moviesCategory);\r\n            const moviesToShow = movies;\r\n            this.setState({\r\n                status: 'LOADED',\r\n                movies,\r\n                moviesToShow\r\n            });\r\n        } catch (error) {\r\n            this.setState({\r\n                status: 'LOADING_ERROR',\r\n                error: error as Error\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nexport default MoviesList;"]},"metadata":{},"sourceType":"module"}