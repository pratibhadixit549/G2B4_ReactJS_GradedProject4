{"ast":null,"code":"var _jsxFileName = \"E:\\\\VSCode Files\\\\Making-React-App\\\\IndustrialProject\\\\ShrishtiSaxena\\\\G2B7_ReactJS_GradedProject4-main\\\\client\\\\src\\\\component\\\\moviesDetails\\\\MoviesDetails.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport { Alert, Col, Row } from \"react-bootstrap\";\nimport LoadingIndicator from \"../common/LoadingIndicator\";\nimport { getMovieByTitle } from \"../../services/movies\";\nimport NoDataMatched from \"../global/NoDataMatched\";\nimport { NavLink } from \"react-router-dom\";\nimport './MoviesDetails.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MoviesDetails = props => {\n  _s();\n\n  var _error$message;\n\n  const [status, setStatus] = useState(\"LOADING\");\n  const [movies, setMovies] = useState(null);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchMovie = async () => {\n      try {\n        const data = await getMovieByTitle(props.match.params.moviesCategory, props.match.params.path);\n        setMovies(data);\n        setStatus(\"LOADED\");\n      } catch (errormsg) {\n        setError(errormsg);\n        setStatus(\"LOADING_ERROR\");\n      }\n    };\n\n    fetchMovie();\n  }, [props.match.params.path, props.match.params.moviesCategory]);\n  let el; // // Get the modal\n  // var modal = document.getElementById('myModal');\n  // // Get the image and insert it inside the modal - use its \"alt\" text as a caption\n  // var img = document.getElementById('myImg');\n  // var modalImg = document.getElementById(\"img01\");\n  // var captionText = document.getElementById(\"caption\");\n\n  switch (status) {\n    case \"LOADING\":\n      el = /*#__PURE__*/_jsxDEV(LoadingIndicator, {\n        size: \"large\",\n        message: \"Loading Libraries. Please wait....\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this);\n      break;\n\n    case \"LOADED\":\n      if (movies === null) {\n        el = /*#__PURE__*/_jsxDEV(NoDataMatched, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 14\n        }, this);\n        break;\n      }\n\n      const {\n        title,\n        storyline,\n        poster,\n        posterurl,\n        duration,\n        releaseDate,\n        actors,\n        year,\n        imdbRating,\n        contentRating,\n        averageRating,\n        genres\n      } = movies;\n\n      if (title === null) {\n        el = /*#__PURE__*/_jsxDEV(NoDataMatched, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 14\n        }, this);\n        break;\n      }\n\n      const imageClick = () => {\n        return /*#__PURE__*/_jsxDEV(\"img\", {\n          src: `${posterurl}`,\n          alt: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 16\n        }, this);\n      };\n\n      var currentImgId; // // Get the modal\n      // var modal = document.getElementById('myModal') as HTMLDivElement;\n      // // Get the image and insert it inside the modal - use its \"alt\" text as a caption\n      // var img = document.getElementById('myImg')!;\n      // var modalImg = document.getElementById(\"img01\") as HTMLImageElement;\n      // var captionText = document.getElementById(\"caption\") as HTMLImageElement;\n      // const imageClick = () => {\n      //   modal.style.display = \"block\";\n      //   modalImg.src = this.src;\n      //   modalImg.alt = this.alt;\n      //   captionText.innerHTML = this.alt;\n      //   // return <img src={`${posterurl}`} alt={title} />;\n      // };\n      // var currentImgId;\n      // const spanImageClick = () =>  { \n      //   modal.style.display = \"none\";\n      // }\n      // var modal = document.getElementById(\"myModal\")!;\n      // // Get the image and insert it inside the modal - use its \"alt\" text as a caption\n      // var img = document.getElementById(\"myImg\");\n      // var modalImg = document.getElementById(\"img01\") as HTMLImageElement;\n      // var captionText = document.getElementById(\"caption\")!;\n      // const imageClick = () => {\n      //   modal.style.display = \"block\";\n      //   this.src = {`${posterurl}`}\n      //   modalImg.src = this.src;\n      //   // modalImg.src = document.getElementById(\"myImg\")!.src;\n      //   // modalImg.alt = this.alt;\n      //   // captionText.innerHTML = this.alt;\n      //   // return <img src={`${posterurl}`} alt={title} />;\n      // };\n      // img.onclick = function(){\n      //   let default_image = this.src;\n      //   modal.style.display = \"block\";\n      //   this.src = 'https://www.12542.ru/206-28.jpg';\n      //   modalImg.src = this.src;\n      //   this.src = default_image;\n      //   captionText.innerHTML = this.alt;\n      // }\n      // Get the <span> element that closes the modal\n      // var span = document.getElementsByClassName(\"close\")[0];\n      // // When the user clicks on <span> (x), close the modal\n      // // span.onclick = function() { \n      // //   modal.style.display = \"none\";\n      // // }\n      // const modalImageClick = () =>  { \n      //   modal.style.display = \"none\";\n      // }\n      // Get the modal\n      // var modal = document.getElementById('myModal') as HTMLImageElement;\n      // // Get the image and insert it inside the modal - use its \"alt\" text as a caption\n      // var img = document.getElementById('myImg') as HTMLImageElement;\n      // var modalImg = document.getElementById(\"img01\") as HTMLImageElement;\n      // var captionText = document.getElementById(\"caption\") as HTMLImageElement;\n      // img.onclick = function(){\n      //     modal.style.display = \"block\";\n      //     modalImg.src = this.src;\n      //     modalImg.alt = this.alt;\n      //     captionText.innerHTML = this.alt;\n      // }\n      // const imageClick = () => {\n      //   modal.style.display = \"block\";\n      //   modalImg.src = <img src={`${posterurl}`}></img>;\n      //   // if (src == null) {\n      //   //   console.log('Instance is null or undefined');\n      //   // } else {\n      //   //   console.log(instance!.name); // ok now\n      //   // }\n      //   modalImg.alt = <img alt={title}></img>;\n      //   captionText.innerHTML = <img alt={title}></img>;\n      //   // return <img src={`${posterurl}`} alt={title} />;\n      // };\n      // When the user clicks on <span> (x), close the modal\n      // modal.onclick = function() {\n      //     img01.className += \" out\";\n      //     setTimeout(function() {\n      //        modal.style.display = \"none\";\n      //        img01.className = \"modal-content\";\n      //      }, 400);\n      //  }\n      // const modalImageClick = () => {\n      //   img01.className += \" out\";\n      //   setTimeout(function() {\n      //     modal.style.display = \"none\";\n      //     img01.className = \"modal-content\";\n      //   }, 400)\n      //   // return <img src={`${posterurl}`} alt={title} />;\n      // };\n\n      el = /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(NavLink, {\n          to: \"/movies-in-theaters\",\n          activeStyle: {\n            color: '#02a8c7'\n          },\n          style: {\n            color: '#02a8c7',\n            position: 'absolute',\n            alignItems: 'center',\n            top: '5%',\n            left: '3%',\n            transform: 'translate(-6%, -30%)',\n            fontSize: '120%'\n          },\n          children: \"Back To Home\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Row, {\n          className: \"mx-3 my-5 m\",\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            xs: 12,\n            lg: 3,\n            className: \"my-3\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"container\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"checkbox\",\n                id: \"zoom_img\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"zoom_img\",\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  id: \"myImg\",\n                  src: `${process.env.REACT_APP_API_BASE_URL}/img/${poster}`,\n                  alt: title,\n                  className: \"w-100\",\n                  onClick: () => imageClick(),\n                  width: \"\",\n                  height: \"\" // key={`${process.env.REACT_APP_API_BASE_URL}/img/${poster}`}\n\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 241,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            xs: 12,\n            lg: 8,\n            className: \"my-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                children: [title, \" (\", year, \")\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 391,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 390,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"my-4\",\n              children: [/*#__PURE__*/_jsxDEV(Row, {\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  xs: 3,\n                  children: \"Imdb Rating\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 397,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  xs: 8,\n                  children: imdbRating\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 398,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 396,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Row, {\n                className: \"my-2\",\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  xs: 3,\n                  children: \"Content Rating\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 401,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  xs: 8,\n                  children: contentRating\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 402,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 400,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Row, {\n                className: \"my-2\",\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  xs: 3,\n                  children: \"Average Rating\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 405,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  xs: 8,\n                  children: averageRating\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 406,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 404,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Row, {\n                className: \"my-2\",\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  xs: 3,\n                  children: \"Duration\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 409,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  xs: 8,\n                  children: duration\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 410,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 408,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Row, {\n                className: \"my-2\",\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  xs: 3,\n                  children: \"Genres\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 413,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  xs: 8,\n                  children: genres.map(genres => /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"me-2\",\n                    children: genres\n                  }, genres, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 416,\n                    columnNumber: 23\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 414,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 412,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Row, {\n                className: \"my-2\",\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  xs: 3,\n                  children: \"Actors\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 423,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  xs: 8,\n                  children: actors.map(actors => /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"me-2\",\n                    children: actors\n                  }, actors, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 426,\n                    columnNumber: 23\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 424,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 422,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Row, {\n                className: \"my-2\",\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  xs: 3,\n                  children: \"Released Date\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 433,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  xs: 8,\n                  children: releaseDate\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 434,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 432,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Row, {\n                className: \"my-2\",\n                children: [/*#__PURE__*/_jsxDEV(Col, {\n                  xs: 3,\n                  children: \"Story Line\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 437,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  xs: 8,\n                  children: storyline\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 438,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 436,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 395,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 389,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this);\n      break;\n\n    case \"LOADING_ERROR\":\n      let msg = (_error$message = error === null || error === void 0 ? void 0 : error.message) !== null && _error$message !== void 0 ? _error$message : \"\";\n\n      if ((msg === null || msg === void 0 ? void 0 : msg.indexOf(\"404\")) > -1) {\n        el = /*#__PURE__*/_jsxDEV(NoDataMatched, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 451,\n          columnNumber: 14\n        }, this);\n      } else {\n        el = /*#__PURE__*/_jsxDEV(Alert, {\n          variant: \"danger\",\n          children: error === null || error === void 0 ? void 0 : error.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 453,\n          columnNumber: 14\n        }, this);\n      }\n\n      break;\n  }\n\n  return el;\n};\n\n_s(MoviesDetails, \"PIlNkyEKrrl7JSXCciToVugAf0I=\");\n\n_c = MoviesDetails;\nexport default MoviesDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MoviesDetails\");","map":{"version":3,"sources":["E:/VSCode Files/Making-React-App/IndustrialProject/ShrishtiSaxena/G2B7_ReactJS_GradedProject4-main/client/src/component/moviesDetails/MoviesDetails.tsx"],"names":["useEffect","useState","Alert","Col","Row","LoadingIndicator","getMovieByTitle","NoDataMatched","NavLink","MoviesDetails","props","status","setStatus","movies","setMovies","error","setError","fetchMovie","data","match","params","moviesCategory","path","errormsg","el","title","storyline","poster","posterurl","duration","releaseDate","actors","year","imdbRating","contentRating","averageRating","genres","imageClick","currentImgId","color","position","alignItems","top","left","transform","fontSize","process","env","REACT_APP_API_BASE_URL","map","msg","message","indexOf"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport { RouteComponentProps } from \"react-router\";\nimport { Alert, Col, Row } from \"react-bootstrap\";\nimport { LoadingStatus } from \"../../services/types\";\nimport IMovies from \"../../model/IMovies\";\nimport LoadingIndicator from \"../common/LoadingIndicator\";\nimport { getMovieByTitle } from \"../../services/movies\";\nimport NoDataMatched from \"../global/NoDataMatched\";\nimport { Link, NavLink } from \"react-router-dom\";\n\n\nimport './MoviesDetails.css';\nimport { TouchableHighlightBase } from \"react-native\";\n\n// import 'bootstrap/dist/css/bootstrap.min.css';\n// import 'bootstrap/js/src/modal';\n// import '/dist/lightbox.css';\n// import '/dist/lightbox.js';\n// import 'dist/js/lightbox-plus-jquery.js';\n\ntype Props = {\n  moviesCategory: string;\n  path: string;\n};\nconst MoviesDetails = (props: RouteComponentProps<Props>) => {\n  const [status, setStatus] = useState<LoadingStatus>(\"LOADING\");\n  const [movies, setMovies] = useState<IMovies | null>(null);\n  const [error, setError] = useState<Error | null>(null);\n\n  useEffect(() => {\n    const fetchMovie = async () => {\n      try {\n        const data = await getMovieByTitle(\n          props.match.params.moviesCategory,\n          props.match.params.path\n        );\n        setMovies(data);\n        setStatus(\"LOADED\");\n      } catch (errormsg: any) {\n        setError(errormsg);\n        setStatus(\"LOADING_ERROR\");\n      }\n    };\n\n    fetchMovie();\n  }, [props.match.params.path, props.match.params.moviesCategory]);\n\n  let el;\n\n  // // Get the modal\n  // var modal = document.getElementById('myModal');\n\n  // // Get the image and insert it inside the modal - use its \"alt\" text as a caption\n  // var img = document.getElementById('myImg');\n  // var modalImg = document.getElementById(\"img01\");\n  // var captionText = document.getElementById(\"caption\");\n\n  switch (status) {\n    case \"LOADING\":\n      el = (\n        <LoadingIndicator\n          size=\"large\"\n          message=\"Loading Libraries. Please wait....\"\n        />\n      );\n      break;\n    case \"LOADED\":\n      if (movies === null) {\n        el = <NoDataMatched />;\n        break;\n      }\n\n      const {\n        title,\n        storyline,\n        poster,\n        posterurl,\n        duration,\n        releaseDate,\n        actors,\n        year,\n        imdbRating,\n        contentRating,\n        averageRating,\n        genres,\n      } = movies as IMovies;\n\n      if (title === null) {\n        el = <NoDataMatched />;\n        break;\n      }\n\n      const imageClick = () => {\n        return <img src={`${posterurl}`} alt={title} />;\n      };\n\n      var currentImgId;\n\n      \n\n\n\n\n      // // Get the modal\n      // var modal = document.getElementById('myModal') as HTMLDivElement;\n          \n      // // Get the image and insert it inside the modal - use its \"alt\" text as a caption\n      // var img = document.getElementById('myImg')!;\n      // var modalImg = document.getElementById(\"img01\") as HTMLImageElement;\n      // var captionText = document.getElementById(\"caption\") as HTMLImageElement;\n\n      \n      \n      // const imageClick = () => {\n      //   modal.style.display = \"block\";\n      //   modalImg.src = this.src;\n      //   modalImg.alt = this.alt;\n      //   captionText.innerHTML = this.alt;\n      //   // return <img src={`${posterurl}`} alt={title} />;\n      // };\n\n      // var currentImgId;\n\n      \n      \n      \n      \n      \n      // const spanImageClick = () =>  { \n      //   modal.style.display = \"none\";\n      // }\n\n      // var modal = document.getElementById(\"myModal\")!;\n\n      // // Get the image and insert it inside the modal - use its \"alt\" text as a caption\n      // var img = document.getElementById(\"myImg\");\n      // var modalImg = document.getElementById(\"img01\") as HTMLImageElement;\n      // var captionText = document.getElementById(\"caption\")!;\n\n      // const imageClick = () => {\n      //   modal.style.display = \"block\";\n      //   this.src = {`${posterurl}`}\n      //   modalImg.src = this.src;\n      //   // modalImg.src = document.getElementById(\"myImg\")!.src;\n      //   // modalImg.alt = this.alt;\n      //   // captionText.innerHTML = this.alt;\n      //   // return <img src={`${posterurl}`} alt={title} />;\n      // };\n\n      \n\n\n      // img.onclick = function(){\n      //   let default_image = this.src;\n      //   modal.style.display = \"block\";\n      //   this.src = 'https://www.12542.ru/206-28.jpg';\n      //   modalImg.src = this.src;\n      //   this.src = default_image;\n      //   captionText.innerHTML = this.alt;\n      // }\n\n      // Get the <span> element that closes the modal\n      // var span = document.getElementsByClassName(\"close\")[0];\n\n      // // When the user clicks on <span> (x), close the modal\n      // // span.onclick = function() { \n      // //   modal.style.display = \"none\";\n      // // }\n\n      // const modalImageClick = () =>  { \n      //   modal.style.display = \"none\";\n      // }\n\n\n\n      // Get the modal\n      // var modal = document.getElementById('myModal') as HTMLImageElement;\n\n      // // Get the image and insert it inside the modal - use its \"alt\" text as a caption\n      // var img = document.getElementById('myImg') as HTMLImageElement;\n      // var modalImg = document.getElementById(\"img01\") as HTMLImageElement;\n      // var captionText = document.getElementById(\"caption\") as HTMLImageElement;\n\n\n      // img.onclick = function(){\n      //     modal.style.display = \"block\";\n      //     modalImg.src = this.src;\n      //     modalImg.alt = this.alt;\n      //     captionText.innerHTML = this.alt;\n      // }\n\n      // const imageClick = () => {\n      //   modal.style.display = \"block\";\n      //   modalImg.src = <img src={`${posterurl}`}></img>;\n      //   // if (src == null) {\n      //   //   console.log('Instance is null or undefined');\n      //   // } else {\n      //   //   console.log(instance!.name); // ok now\n      //   // }\n      //   modalImg.alt = <img alt={title}></img>;\n      //   captionText.innerHTML = <img alt={title}></img>;\n      //   // return <img src={`${posterurl}`} alt={title} />;\n      // };\n\n\n      // When the user clicks on <span> (x), close the modal\n      // modal.onclick = function() {\n      //     img01.className += \" out\";\n      //     setTimeout(function() {\n      //        modal.style.display = \"none\";\n      //        img01.className = \"modal-content\";\n      //      }, 400);\n         \n      //  }\n\n      // const modalImageClick = () => {\n      //   img01.className += \" out\";\n      //   setTimeout(function() {\n      //     modal.style.display = \"none\";\n      //     img01.className = \"modal-content\";\n      //   }, 400)\n      //   // return <img src={`${posterurl}`} alt={title} />;\n      // };\n     \n\n\n\n\n\n\n\n\n      el = (\n        <div>\n          <NavLink to=\"/movies-in-theaters\" activeStyle={{ color: '#02a8c7'}} style={{color: '#02a8c7', position:'absolute', alignItems:'center',top:'5%', left:'3%', transform: 'translate(-6%, -30%)', fontSize:'120%'}}>Back To Home</NavLink>\n          <Row className=\"mx-3 my-5 m\">\n            <Col xs={12} lg={3} className=\"my-3\">\n              <div className=\"container\">\n                <input type=\"checkbox\" id=\"zoom_img\"></input>\n                <label htmlFor=\"zoom_img\">\n                  <img\n                    id=\"myImg\"\n                    src={`${process.env.REACT_APP_API_BASE_URL}/img/${poster}`}\n                    alt={title}\n                    className=\"w-100\"\n                    onClick={() => imageClick()}\n                    width={\"\"}\n                    height={\"\"}\n                    // key={`${process.env.REACT_APP_API_BASE_URL}/img/${poster}`}\n                  />\n                </label>\n                \n              </div>\n              {/* <img id=\"myImg\" src=\"https://bit.ly/2idhXwp\" alt=\"Playa del Carmen\" width=\"\" height=\"\"> */}\n              {/* <img\n                id=\"myImg\"\n                src={`${process.env.REACT_APP_API_BASE_URL}/img/${poster}`}\n                alt={title}\n                className=\"w-100\"\n                onClick={() => imageClick()}\n                width={\"\"}\n                height={\"\"}\n                // key={`${process.env.REACT_APP_API_BASE_URL}/img/${poster}`}\n              /> */}\n              {/* <div className=\"image-box\">\n                <img\n                  id=\"myImg\"\n                  src={`${process.env.REACT_APP_API_BASE_URL}/img/${poster}`}\n                  alt={title}\n                  className=\"w-100\"\n                  onClick={() => imageClick()}\n                  width={\"\"}\n                  height={\"\"}\n                  // key={`${process.env.REACT_APP_API_BASE_URL}/img/${poster}`}\n                />\n              </div> */}\n\n              {/* <!-- The Modal --> */}\n              {/* <div id=\"myModal\" className=\"modal\">\n                <span className=\"close\">&times;</span>\n                <img className=\"modal-content\" id=\"img01\" onClick={() => modalImageClick()}/>\n                <div id=\"caption\"></div>\n              </div> */}\n\n              {/* <!-- The Modal --> */}\n              {/* <div id=\"myModal\" className=\"modal\">\n                <span className=\"close\" onClick={() => spanImageClick()}>&times;</span>\n                <img className=\"modal-content\" id=\"img01\" />\n                <div id=\"caption\"></div>\n              </div> */}\n              {/* <!-- The Modal --> */}\n              {/* <div id=\"myModal\" className=\"modal\">\n                <img className=\"modal-content\" id=\"img01\" onclose={() => modalImageClick()} />\n              </div> */}\n\n\n              {/* <div className=\"wrap\">\n                <h1>Bootstrap Modal Example</h1>\n                  <button type=\"button\" className=\"btn btn-primary\" data-toggle=\"modal\" data-target=\".bs-example-modal-new\">\n                    open modal\n                  </button>\n              </div>\n \n              <div className=\"modal fade bs-example-modal-new\" tabIndex={-1} role=\"dialog\" aria-labelledby=\"myLargeModalLabel\" aria-hidden=\"true\">\n  \n                <div className=\"modal-dialog\"> */}\n    \n                  {/* <!-- Modal Content: begins --> */}\n                  {/* <div className=\"modal-content\"> */}\n      \n                    {/* <!-- Modal Header --> */}\n                    {/* <div className=\"modal-header\">\n                      <button type=\"button\" className=\"close\" data-dismiss=\"modal\" aria-label=\"Close\"><span aria-hidden=\"true\">&times;</span></button>\n                      <h4 className=\"modal-title\" id=\"gridSystemModalLabel\">Your Headings</h4>\n                    </div> */}\n    \n                    {/* <!-- Modal Body -->   */}\n                    {/* <div className=\"modal-body\">\n                      <div className=\"body-message\">\n                        <h4>Any Heading</h4>\n                        <p>And a paragraph with a full sentence or something else...</p>\n                      </div>\n                    </div> */}\n    \n                    {/* <!-- Modal Footer --> */}\n                    {/* <div className=\"modal-footer\">\n                      <button type=\"button\" className=\"btn btn-primary\" data-dismiss=\"modal\">Close</button>\n                    </div>\n    \n                  </div> */}\n                  {/* <!-- Modal Content: ends --> */}\n    \n                {/* </div>\n  \n              </div> */}\n\n\n\n            {/* <section>\n              <div className=\"rt-container\">\n                  <div className=\"col-rt-12\">\n                    <div className=\"Scriptcontent\">\n                        {/* <!-- Image Zoom HTML -->    */}\n                        {/* <img id=\"myImg\" src=\"img/image.jpg\" alt=\"Trolltunga, Norway\" width=\"500\" height=\"300\" /> */}\n                        {/* <img id=\"myImg\" src={`${process.env.REACT_APP_API_BASE_URL}/img/${poster}`} alt={title} width=\"500\" height=\"300\" onClick={() => imageOnClick()}/>\n\n                        {/* <!-- The Modal --> */}\n                        {/* <div id=\"myModal\" className=\"modal\">\n                          <img className=\"modal-content\" id=\"img01\" />\n                        </div> */} \n    \t\t              {/* <!-- End Image Zoom HTML --> */}\n           \n    \t\t            {/* </div>\n\t\t              </div>\n                </div>\n            </section> */}\n\n              {/* <img\n                src={`${process.env.REACT_APP_API_BASE_URL}/img/${poster}`}\n                alt={title}\n                className=\"w-100\"\n                onClick={() => imageClick()}\n              /> */}\n              {/* <div>\n                <img\n                  src={`${process.env.REACT_APP_API_BASE_URL}/img/${poster}`}\n                  alt={title}\n                  className=\"w-100\"\n                  onClick={() => imageClick()}\n                  data-bs-toggle=\"modal\"\n                  data-bs-target=\"#imageleExample\"\n                />\n              </div>\n\n              <div className=\"modal fade\" id='imageExample' tabIndex={-1} aria-hidden=\"true\">\n                <div className=\"modal-content\">\n                  <div className=\"modal-body\">\n                    <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\n\n                    <img src={`${posterurl}`}\n                    className=\"d-block w-100\"></img>\n                  </div>\n                </div>\n                  \n              </div> */}\n\n              \n            </Col>\n            <Col xs={12} lg={8} className=\"my-3\">\n              <div>\n                <h2>\n                  {title} ({year})\n                </h2>\n              </div>\n              <div className=\"my-4\">\n                <Row>\n                  <Col xs={3}>Imdb Rating</Col>\n                  <Col xs={8}>{imdbRating}</Col>\n                </Row>\n                <Row className=\"my-2\">\n                  <Col xs={3}>Content Rating</Col>\n                  <Col xs={8}>{contentRating}</Col>\n                </Row>\n                <Row className=\"my-2\">\n                  <Col xs={3}>Average Rating</Col>\n                  <Col xs={8}>{averageRating}</Col>\n                </Row>\n                <Row className=\"my-2\">\n                  <Col xs={3}>Duration</Col>\n                  <Col xs={8}>{duration}</Col>\n                </Row>\n                <Row className=\"my-2\">\n                  <Col xs={3}>Genres</Col>\n                  <Col xs={8}>\n                    {genres.map((genres) => (\n                      <span className=\"me-2\" key={genres}>\n                        {genres}\n                      </span>\n                    ))}\n                  </Col>\n                </Row>\n                <Row className=\"my-2\">\n                  <Col xs={3}>Actors</Col>\n                  <Col xs={8}>\n                    {actors.map((actors) => (\n                      <span className=\"me-2\" key={actors}>\n                        {actors}\n                      </span>\n                    ))}\n                  </Col>\n                </Row>\n                <Row className=\"my-2\">\n                  <Col xs={3}>Released Date</Col>\n                  <Col xs={8}>{releaseDate}</Col>\n                </Row>\n                <Row className=\"my-2\">\n                  <Col xs={3}>Story Line</Col>\n                  <Col xs={8}>{storyline}</Col>\n                </Row>\n              </div>\n            </Col>\n          </Row>\n        </div>\n      );\n      break;\n\n    case \"LOADING_ERROR\":\n      let msg = error?.message ?? \"\";\n\n      if (msg?.indexOf(\"404\") > -1) {\n        el = <NoDataMatched />;\n      } else {\n        el = <Alert variant=\"danger\">{error?.message}</Alert>;\n      }\n      break;\n  }\n\n  return el;\n};\n\nexport default MoviesDetails;\n"]},"metadata":{},"sourceType":"module"}