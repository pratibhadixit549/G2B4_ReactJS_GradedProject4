{"ast":null,"code":"import Spinner from'react-bootstrap/Spinner';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var sizeMap={small:{width:'1.5rem',height:'1.5rem'},medium:{width:'2rem',height:'2rem'},large:{width:'4rem',height:'4rem'}};var LoadingIndicator=function LoadingIndicator(_ref){var size=_ref.size,message=_ref.message;return/*#__PURE__*/_jsxs(\"div\",{className:\"d-flex flex-column align-items-center my-2\",children:[/*#__PURE__*/_jsx(Spinner,{animation:\"border\",role:\"status\",style:sizeMap[size],children:/*#__PURE__*/_jsx(\"span\",{className:\"visually-hidden\",children:message})}),/*#__PURE__*/_jsx(\"span\",{className:\"my-2\",children:message})]});};LoadingIndicator.defaultProps={size:'medium',message:'Loading'};export default LoadingIndicator;","map":{"version":3,"sources":["E:/Full-Stack-Project/project-movie-app/client/src/component/common/LoadingIndicator.tsx"],"names":["Spinner","sizeMap","small","width","height","medium","large","LoadingIndicator","size","message","defaultProps"],"mappings":"AAAA,MAAOA,CAAAA,OAAP,KAAoB,yBAApB,C,wFAOA,GAAMC,CAAAA,OAAO,CAAG,CACZC,KAAK,CAAE,CACHC,KAAK,CAAE,QADJ,CAEHC,MAAM,CAAE,QAFL,CADK,CAKZC,MAAM,CAAE,CACJF,KAAK,CAAE,MADH,CAEJC,MAAM,CAAE,MAFJ,CALI,CASZE,KAAK,CAAE,CACHH,KAAK,CAAE,MADJ,CAEHC,MAAM,CAAE,MAFL,CATK,CAAhB,CAeA,GAAMG,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,MAA8B,IAA3BC,CAAAA,IAA2B,MAA3BA,IAA2B,CAArBC,OAAqB,MAArBA,OAAqB,CACnD,mBACI,aAAK,SAAS,CAAC,4CAAf,wBACI,KAAC,OAAD,EAAS,SAAS,CAAC,QAAnB,CAA4B,IAAI,CAAC,QAAjC,CAA0C,KAAK,CAAER,OAAO,CAACO,IAAD,CAAxD,uBACI,aAAM,SAAS,CAAC,iBAAhB,UAAmCC,OAAnC,EADJ,EADJ,cAII,aAAM,SAAS,CAAC,MAAhB,UAAwBA,OAAxB,EAJJ,GADJ,CAQH,CATD,CAWAF,gBAAgB,CAACG,YAAjB,CAAgC,CAC5BF,IAAI,CAAE,QADsB,CAE5BC,OAAO,CAAE,SAFmB,CAAhC,CAKA,cAAeF,CAAAA,gBAAf","sourcesContent":["import Spinner from 'react-bootstrap/Spinner';\r\n\r\ntype Props = {\r\n    size: 'small' | 'medium' | 'large',\r\n    message: string\r\n};\r\n\r\nconst sizeMap = {\r\n    small: {\r\n        width: '1.5rem',\r\n        height: '1.5rem'\r\n    },\r\n    medium: {\r\n        width: '2rem',\r\n        height: '2rem'\r\n    },\r\n    large: {\r\n        width: '4rem',\r\n        height: '4rem'\r\n    }\r\n}\r\n\r\nconst LoadingIndicator = ({ size, message }: Props) => {\r\n    return (\r\n        <div className=\"d-flex flex-column align-items-center my-2\">\r\n            <Spinner animation=\"border\" role=\"status\" style={sizeMap[size]}>\r\n                <span className=\"visually-hidden\">{message}</span>\r\n            </Spinner>\r\n            <span className=\"my-2\">{message}</span>\r\n        </div>\r\n    );\r\n};\r\n\r\nLoadingIndicator.defaultProps = {\r\n    size: 'medium',\r\n    message: 'Loading'\r\n};\r\n\r\nexport default LoadingIndicator;"]},"metadata":{},"sourceType":"module"}