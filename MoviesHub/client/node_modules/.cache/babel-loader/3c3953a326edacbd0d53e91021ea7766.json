{"ast":null,"code":"/**\n * --------------------------------------------------------------------------\n * Bootstrap (v5.0.2): modal.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\nimport { defineJQueryPlugin, getElementFromSelector, isRTL, isVisible, reflow, typeCheckConfig } from './util/index';\nimport EventHandler from './dom/event-handler';\nimport Manipulator from './dom/manipulator';\nimport SelectorEngine from './dom/selector-engine';\nimport ScrollBarHelper from './util/scrollbar';\nimport BaseComponent from './base-component';\nimport Backdrop from './util/backdrop';\n/**\n * ------------------------------------------------------------------------\n * Constants\n * ------------------------------------------------------------------------\n */\n\nconst NAME = 'modal';\nconst DATA_KEY = 'bs.modal';\nconst EVENT_KEY = `.${DATA_KEY}`;\nconst DATA_API_KEY = '.data-api';\nconst ESCAPE_KEY = 'Escape';\nconst Default = {\n  backdrop: true,\n  keyboard: true,\n  focus: true\n};\nconst DefaultType = {\n  backdrop: '(boolean|string)',\n  keyboard: 'boolean',\n  focus: 'boolean'\n};\nconst EVENT_HIDE = `hide${EVENT_KEY}`;\nconst EVENT_HIDE_PREVENTED = `hidePrevented${EVENT_KEY}`;\nconst EVENT_HIDDEN = `hidden${EVENT_KEY}`;\nconst EVENT_SHOW = `show${EVENT_KEY}`;\nconst EVENT_SHOWN = `shown${EVENT_KEY}`;\nconst EVENT_FOCUSIN = `focusin${EVENT_KEY}`;\nconst EVENT_RESIZE = `resize${EVENT_KEY}`;\nconst EVENT_CLICK_DISMISS = `click.dismiss${EVENT_KEY}`;\nconst EVENT_KEYDOWN_DISMISS = `keydown.dismiss${EVENT_KEY}`;\nconst EVENT_MOUSEUP_DISMISS = `mouseup.dismiss${EVENT_KEY}`;\nconst EVENT_MOUSEDOWN_DISMISS = `mousedown.dismiss${EVENT_KEY}`;\nconst EVENT_CLICK_DATA_API = `click${EVENT_KEY}${DATA_API_KEY}`;\nconst CLASS_NAME_OPEN = 'modal-open';\nconst CLASS_NAME_FADE = 'fade';\nconst CLASS_NAME_SHOW = 'show';\nconst CLASS_NAME_STATIC = 'modal-static';\nconst SELECTOR_DIALOG = '.modal-dialog';\nconst SELECTOR_MODAL_BODY = '.modal-body';\nconst SELECTOR_DATA_TOGGLE = '[data-bs-toggle=\"modal\"]';\nconst SELECTOR_DATA_DISMISS = '[data-bs-dismiss=\"modal\"]';\n/**\n * ------------------------------------------------------------------------\n * Class Definition\n * ------------------------------------------------------------------------\n */\n\nclass Modal extends BaseComponent {\n  constructor(element, config) {\n    super(element);\n    this._config = this._getConfig(config);\n    this._dialog = SelectorEngine.findOne(SELECTOR_DIALOG, this._element);\n    this._backdrop = this._initializeBackDrop();\n    this._isShown = false;\n    this._ignoreBackdropClick = false;\n    this._isTransitioning = false;\n    this._scrollBar = new ScrollBarHelper();\n  } // Getters\n\n\n  static get Default() {\n    return Default;\n  }\n\n  static get NAME() {\n    return NAME;\n  } // Public\n\n\n  toggle(relatedTarget) {\n    return this._isShown ? this.hide() : this.show(relatedTarget);\n  }\n\n  show(relatedTarget) {\n    if (this._isShown || this._isTransitioning) {\n      return;\n    }\n\n    const showEvent = EventHandler.trigger(this._element, EVENT_SHOW, {\n      relatedTarget\n    });\n\n    if (showEvent.defaultPrevented) {\n      return;\n    }\n\n    this._isShown = true;\n\n    if (this._isAnimated()) {\n      this._isTransitioning = true;\n    }\n\n    this._scrollBar.hide();\n\n    document.body.classList.add(CLASS_NAME_OPEN);\n\n    this._adjustDialog();\n\n    this._setEscapeEvent();\n\n    this._setResizeEvent();\n\n    EventHandler.on(this._element, EVENT_CLICK_DISMISS, SELECTOR_DATA_DISMISS, event => this.hide(event));\n    EventHandler.on(this._dialog, EVENT_MOUSEDOWN_DISMISS, () => {\n      EventHandler.one(this._element, EVENT_MOUSEUP_DISMISS, event => {\n        if (event.target === this._element) {\n          this._ignoreBackdropClick = true;\n        }\n      });\n    });\n\n    this._showBackdrop(() => this._showElement(relatedTarget));\n  }\n\n  hide(event) {\n    if (event && ['A', 'AREA'].includes(event.target.tagName)) {\n      event.preventDefault();\n    }\n\n    if (!this._isShown || this._isTransitioning) {\n      return;\n    }\n\n    const hideEvent = EventHandler.trigger(this._element, EVENT_HIDE);\n\n    if (hideEvent.defaultPrevented) {\n      return;\n    }\n\n    this._isShown = false;\n\n    const isAnimated = this._isAnimated();\n\n    if (isAnimated) {\n      this._isTransitioning = true;\n    }\n\n    this._setEscapeEvent();\n\n    this._setResizeEvent();\n\n    EventHandler.off(document, EVENT_FOCUSIN);\n\n    this._element.classList.remove(CLASS_NAME_SHOW);\n\n    EventHandler.off(this._element, EVENT_CLICK_DISMISS);\n    EventHandler.off(this._dialog, EVENT_MOUSEDOWN_DISMISS);\n\n    this._queueCallback(() => this._hideModal(), this._element, isAnimated);\n  }\n\n  dispose() {\n    [window, this._dialog].forEach(htmlElement => EventHandler.off(htmlElement, EVENT_KEY));\n\n    this._backdrop.dispose();\n\n    super.dispose();\n    /**\n     * `document` has 2 events `EVENT_FOCUSIN` and `EVENT_CLICK_DATA_API`\n     * Do not move `document` in `htmlElements` array\n     * It will remove `EVENT_CLICK_DATA_API` event that should remain\n     */\n\n    EventHandler.off(document, EVENT_FOCUSIN);\n  }\n\n  handleUpdate() {\n    this._adjustDialog();\n  } // Private\n\n\n  _initializeBackDrop() {\n    return new Backdrop({\n      isVisible: Boolean(this._config.backdrop),\n      // 'static' option will be translated to true, and booleans will keep their value\n      isAnimated: this._isAnimated()\n    });\n  }\n\n  _getConfig(config) {\n    config = { ...Default,\n      ...Manipulator.getDataAttributes(this._element),\n      ...(typeof config === 'object' ? config : {})\n    };\n    typeCheckConfig(NAME, config, DefaultType);\n    return config;\n  }\n\n  _showElement(relatedTarget) {\n    const isAnimated = this._isAnimated();\n\n    const modalBody = SelectorEngine.findOne(SELECTOR_MODAL_BODY, this._dialog);\n\n    if (!this._element.parentNode || this._element.parentNode.nodeType !== Node.ELEMENT_NODE) {\n      // Don't move modal's DOM position\n      document.body.appendChild(this._element);\n    }\n\n    this._element.style.display = 'block';\n\n    this._element.removeAttribute('aria-hidden');\n\n    this._element.setAttribute('aria-modal', true);\n\n    this._element.setAttribute('role', 'dialog');\n\n    this._element.scrollTop = 0;\n\n    if (modalBody) {\n      modalBody.scrollTop = 0;\n    }\n\n    if (isAnimated) {\n      reflow(this._element);\n    }\n\n    this._element.classList.add(CLASS_NAME_SHOW);\n\n    if (this._config.focus) {\n      this._enforceFocus();\n    }\n\n    const transitionComplete = () => {\n      if (this._config.focus) {\n        this._element.focus();\n      }\n\n      this._isTransitioning = false;\n      EventHandler.trigger(this._element, EVENT_SHOWN, {\n        relatedTarget\n      });\n    };\n\n    this._queueCallback(transitionComplete, this._dialog, isAnimated);\n  }\n\n  _enforceFocus() {\n    EventHandler.off(document, EVENT_FOCUSIN); // guard against infinite focus loop\n\n    EventHandler.on(document, EVENT_FOCUSIN, event => {\n      if (document !== event.target && this._element !== event.target && !this._element.contains(event.target)) {\n        this._element.focus();\n      }\n    });\n  }\n\n  _setEscapeEvent() {\n    if (this._isShown) {\n      EventHandler.on(this._element, EVENT_KEYDOWN_DISMISS, event => {\n        if (this._config.keyboard && event.key === ESCAPE_KEY) {\n          event.preventDefault();\n          this.hide();\n        } else if (!this._config.keyboard && event.key === ESCAPE_KEY) {\n          this._triggerBackdropTransition();\n        }\n      });\n    } else {\n      EventHandler.off(this._element, EVENT_KEYDOWN_DISMISS);\n    }\n  }\n\n  _setResizeEvent() {\n    if (this._isShown) {\n      EventHandler.on(window, EVENT_RESIZE, () => this._adjustDialog());\n    } else {\n      EventHandler.off(window, EVENT_RESIZE);\n    }\n  }\n\n  _hideModal() {\n    this._element.style.display = 'none';\n\n    this._element.setAttribute('aria-hidden', true);\n\n    this._element.removeAttribute('aria-modal');\n\n    this._element.removeAttribute('role');\n\n    this._isTransitioning = false;\n\n    this._backdrop.hide(() => {\n      document.body.classList.remove(CLASS_NAME_OPEN);\n\n      this._resetAdjustments();\n\n      this._scrollBar.reset();\n\n      EventHandler.trigger(this._element, EVENT_HIDDEN);\n    });\n  }\n\n  _showBackdrop(callback) {\n    EventHandler.on(this._element, EVENT_CLICK_DISMISS, event => {\n      if (this._ignoreBackdropClick) {\n        this._ignoreBackdropClick = false;\n        return;\n      }\n\n      if (event.target !== event.currentTarget) {\n        return;\n      }\n\n      if (this._config.backdrop === true) {\n        this.hide();\n      } else if (this._config.backdrop === 'static') {\n        this._triggerBackdropTransition();\n      }\n    });\n\n    this._backdrop.show(callback);\n  }\n\n  _isAnimated() {\n    return this._element.classList.contains(CLASS_NAME_FADE);\n  }\n\n  _triggerBackdropTransition() {\n    const hideEvent = EventHandler.trigger(this._element, EVENT_HIDE_PREVENTED);\n\n    if (hideEvent.defaultPrevented) {\n      return;\n    }\n\n    const {\n      classList,\n      scrollHeight,\n      style\n    } = this._element;\n    const isModalOverflowing = scrollHeight > document.documentElement.clientHeight; // return if the following background transition hasn't yet completed\n\n    if (!isModalOverflowing && style.overflowY === 'hidden' || classList.contains(CLASS_NAME_STATIC)) {\n      return;\n    }\n\n    if (!isModalOverflowing) {\n      style.overflowY = 'hidden';\n    }\n\n    classList.add(CLASS_NAME_STATIC);\n\n    this._queueCallback(() => {\n      classList.remove(CLASS_NAME_STATIC);\n\n      if (!isModalOverflowing) {\n        this._queueCallback(() => {\n          style.overflowY = '';\n        }, this._dialog);\n      }\n    }, this._dialog);\n\n    this._element.focus();\n  } // ----------------------------------------------------------------------\n  // the following methods are used to handle overflowing modals\n  // ----------------------------------------------------------------------\n\n\n  _adjustDialog() {\n    const isModalOverflowing = this._element.scrollHeight > document.documentElement.clientHeight;\n\n    const scrollbarWidth = this._scrollBar.getWidth();\n\n    const isBodyOverflowing = scrollbarWidth > 0;\n\n    if (!isBodyOverflowing && isModalOverflowing && !isRTL() || isBodyOverflowing && !isModalOverflowing && isRTL()) {\n      this._element.style.paddingLeft = `${scrollbarWidth}px`;\n    }\n\n    if (isBodyOverflowing && !isModalOverflowing && !isRTL() || !isBodyOverflowing && isModalOverflowing && isRTL()) {\n      this._element.style.paddingRight = `${scrollbarWidth}px`;\n    }\n  }\n\n  _resetAdjustments() {\n    this._element.style.paddingLeft = '';\n    this._element.style.paddingRight = '';\n  } // Static\n\n\n  static jQueryInterface(config, relatedTarget) {\n    return this.each(function () {\n      const data = Modal.getOrCreateInstance(this, config);\n\n      if (typeof config !== 'string') {\n        return;\n      }\n\n      if (typeof data[config] === 'undefined') {\n        throw new TypeError(`No method named \"${config}\"`);\n      }\n\n      data[config](relatedTarget);\n    });\n  }\n\n}\n/**\n * ------------------------------------------------------------------------\n * Data Api implementation\n * ------------------------------------------------------------------------\n */\n\n\nEventHandler.on(document, EVENT_CLICK_DATA_API, SELECTOR_DATA_TOGGLE, function (event) {\n  const target = getElementFromSelector(this);\n\n  if (['A', 'AREA'].includes(this.tagName)) {\n    event.preventDefault();\n  }\n\n  EventHandler.one(target, EVENT_SHOW, showEvent => {\n    if (showEvent.defaultPrevented) {\n      // only register focus restorer if modal will actually get shown\n      return;\n    }\n\n    EventHandler.one(target, EVENT_HIDDEN, () => {\n      if (isVisible(this)) {\n        this.focus();\n      }\n    });\n  });\n  const data = Modal.getOrCreateInstance(target);\n  data.toggle(this);\n});\n/**\n * ------------------------------------------------------------------------\n * jQuery\n * ------------------------------------------------------------------------\n * add .Modal to jQuery only if jQuery is present\n */\n\ndefineJQueryPlugin(Modal);\nexport default Modal;","map":{"version":3,"sources":["E:/VSCode Files/Making-React-App/IndustrialProject/ShrishtiSaxena/G2B7_ReactJS_GradedProject4-main/client/node_modules/bootstrap/js/src/modal.js"],"names":["defineJQueryPlugin","getElementFromSelector","isRTL","isVisible","reflow","typeCheckConfig","EventHandler","Manipulator","SelectorEngine","ScrollBarHelper","BaseComponent","Backdrop","NAME","DATA_KEY","EVENT_KEY","DATA_API_KEY","ESCAPE_KEY","Default","backdrop","keyboard","focus","DefaultType","EVENT_HIDE","EVENT_HIDE_PREVENTED","EVENT_HIDDEN","EVENT_SHOW","EVENT_SHOWN","EVENT_FOCUSIN","EVENT_RESIZE","EVENT_CLICK_DISMISS","EVENT_KEYDOWN_DISMISS","EVENT_MOUSEUP_DISMISS","EVENT_MOUSEDOWN_DISMISS","EVENT_CLICK_DATA_API","CLASS_NAME_OPEN","CLASS_NAME_FADE","CLASS_NAME_SHOW","CLASS_NAME_STATIC","SELECTOR_DIALOG","SELECTOR_MODAL_BODY","SELECTOR_DATA_TOGGLE","SELECTOR_DATA_DISMISS","Modal","constructor","element","config","_config","_getConfig","_dialog","findOne","_element","_backdrop","_initializeBackDrop","_isShown","_ignoreBackdropClick","_isTransitioning","_scrollBar","toggle","relatedTarget","hide","show","showEvent","trigger","defaultPrevented","_isAnimated","document","body","classList","add","_adjustDialog","_setEscapeEvent","_setResizeEvent","on","event","one","target","_showBackdrop","_showElement","includes","tagName","preventDefault","hideEvent","isAnimated","off","remove","_queueCallback","_hideModal","dispose","window","forEach","htmlElement","handleUpdate","Boolean","getDataAttributes","modalBody","parentNode","nodeType","Node","ELEMENT_NODE","appendChild","style","display","removeAttribute","setAttribute","scrollTop","_enforceFocus","transitionComplete","contains","key","_triggerBackdropTransition","_resetAdjustments","reset","callback","currentTarget","scrollHeight","isModalOverflowing","documentElement","clientHeight","overflowY","scrollbarWidth","getWidth","isBodyOverflowing","paddingLeft","paddingRight","jQueryInterface","each","data","getOrCreateInstance","TypeError"],"mappings":"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","sourcesContent":["/**\n * --------------------------------------------------------------------------\n * Bootstrap (v5.0.2): modal.js\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/main/LICENSE)\n * --------------------------------------------------------------------------\n */\n\nimport {\n  defineJQueryPlugin,\n  getElementFromSelector,\n  isRTL,\n  isVisible,\n  reflow,\n  typeCheckConfig\n} from './util/index'\nimport EventHandler from './dom/event-handler'\nimport Manipulator from './dom/manipulator'\nimport SelectorEngine from './dom/selector-engine'\nimport ScrollBarHelper from './util/scrollbar'\nimport BaseComponent from './base-component'\nimport Backdrop from './util/backdrop'\n\n/**\n * ------------------------------------------------------------------------\n * Constants\n * ------------------------------------------------------------------------\n */\n\nconst NAME = 'modal'\nconst DATA_KEY = 'bs.modal'\nconst EVENT_KEY = `.${DATA_KEY}`\nconst DATA_API_KEY = '.data-api'\nconst ESCAPE_KEY = 'Escape'\n\nconst Default = {\n  backdrop: true,\n  keyboard: true,\n  focus: true\n}\n\nconst DefaultType = {\n  backdrop: '(boolean|string)',\n  keyboard: 'boolean',\n  focus: 'boolean'\n}\n\nconst EVENT_HIDE = `hide${EVENT_KEY}`\nconst EVENT_HIDE_PREVENTED = `hidePrevented${EVENT_KEY}`\nconst EVENT_HIDDEN = `hidden${EVENT_KEY}`\nconst EVENT_SHOW = `show${EVENT_KEY}`\nconst EVENT_SHOWN = `shown${EVENT_KEY}`\nconst EVENT_FOCUSIN = `focusin${EVENT_KEY}`\nconst EVENT_RESIZE = `resize${EVENT_KEY}`\nconst EVENT_CLICK_DISMISS = `click.dismiss${EVENT_KEY}`\nconst EVENT_KEYDOWN_DISMISS = `keydown.dismiss${EVENT_KEY}`\nconst EVENT_MOUSEUP_DISMISS = `mouseup.dismiss${EVENT_KEY}`\nconst EVENT_MOUSEDOWN_DISMISS = `mousedown.dismiss${EVENT_KEY}`\nconst EVENT_CLICK_DATA_API = `click${EVENT_KEY}${DATA_API_KEY}`\n\nconst CLASS_NAME_OPEN = 'modal-open'\nconst CLASS_NAME_FADE = 'fade'\nconst CLASS_NAME_SHOW = 'show'\nconst CLASS_NAME_STATIC = 'modal-static'\n\nconst SELECTOR_DIALOG = '.modal-dialog'\nconst SELECTOR_MODAL_BODY = '.modal-body'\nconst SELECTOR_DATA_TOGGLE = '[data-bs-toggle=\"modal\"]'\nconst SELECTOR_DATA_DISMISS = '[data-bs-dismiss=\"modal\"]'\n\n/**\n * ------------------------------------------------------------------------\n * Class Definition\n * ------------------------------------------------------------------------\n */\n\nclass Modal extends BaseComponent {\n  constructor(element, config) {\n    super(element)\n\n    this._config = this._getConfig(config)\n    this._dialog = SelectorEngine.findOne(SELECTOR_DIALOG, this._element)\n    this._backdrop = this._initializeBackDrop()\n    this._isShown = false\n    this._ignoreBackdropClick = false\n    this._isTransitioning = false\n    this._scrollBar = new ScrollBarHelper()\n  }\n\n  // Getters\n\n  static get Default() {\n    return Default\n  }\n\n  static get NAME() {\n    return NAME\n  }\n\n  // Public\n\n  toggle(relatedTarget) {\n    return this._isShown ? this.hide() : this.show(relatedTarget)\n  }\n\n  show(relatedTarget) {\n    if (this._isShown || this._isTransitioning) {\n      return\n    }\n\n    const showEvent = EventHandler.trigger(this._element, EVENT_SHOW, {\n      relatedTarget\n    })\n\n    if (showEvent.defaultPrevented) {\n      return\n    }\n\n    this._isShown = true\n\n    if (this._isAnimated()) {\n      this._isTransitioning = true\n    }\n\n    this._scrollBar.hide()\n\n    document.body.classList.add(CLASS_NAME_OPEN)\n\n    this._adjustDialog()\n\n    this._setEscapeEvent()\n    this._setResizeEvent()\n\n    EventHandler.on(this._element, EVENT_CLICK_DISMISS, SELECTOR_DATA_DISMISS, event => this.hide(event))\n\n    EventHandler.on(this._dialog, EVENT_MOUSEDOWN_DISMISS, () => {\n      EventHandler.one(this._element, EVENT_MOUSEUP_DISMISS, event => {\n        if (event.target === this._element) {\n          this._ignoreBackdropClick = true\n        }\n      })\n    })\n\n    this._showBackdrop(() => this._showElement(relatedTarget))\n  }\n\n  hide(event) {\n    if (event && ['A', 'AREA'].includes(event.target.tagName)) {\n      event.preventDefault()\n    }\n\n    if (!this._isShown || this._isTransitioning) {\n      return\n    }\n\n    const hideEvent = EventHandler.trigger(this._element, EVENT_HIDE)\n\n    if (hideEvent.defaultPrevented) {\n      return\n    }\n\n    this._isShown = false\n    const isAnimated = this._isAnimated()\n\n    if (isAnimated) {\n      this._isTransitioning = true\n    }\n\n    this._setEscapeEvent()\n    this._setResizeEvent()\n\n    EventHandler.off(document, EVENT_FOCUSIN)\n\n    this._element.classList.remove(CLASS_NAME_SHOW)\n\n    EventHandler.off(this._element, EVENT_CLICK_DISMISS)\n    EventHandler.off(this._dialog, EVENT_MOUSEDOWN_DISMISS)\n\n    this._queueCallback(() => this._hideModal(), this._element, isAnimated)\n  }\n\n  dispose() {\n    [window, this._dialog]\n      .forEach(htmlElement => EventHandler.off(htmlElement, EVENT_KEY))\n\n    this._backdrop.dispose()\n    super.dispose()\n\n    /**\n     * `document` has 2 events `EVENT_FOCUSIN` and `EVENT_CLICK_DATA_API`\n     * Do not move `document` in `htmlElements` array\n     * It will remove `EVENT_CLICK_DATA_API` event that should remain\n     */\n    EventHandler.off(document, EVENT_FOCUSIN)\n  }\n\n  handleUpdate() {\n    this._adjustDialog()\n  }\n\n  // Private\n\n  _initializeBackDrop() {\n    return new Backdrop({\n      isVisible: Boolean(this._config.backdrop), // 'static' option will be translated to true, and booleans will keep their value\n      isAnimated: this._isAnimated()\n    })\n  }\n\n  _getConfig(config) {\n    config = {\n      ...Default,\n      ...Manipulator.getDataAttributes(this._element),\n      ...(typeof config === 'object' ? config : {})\n    }\n    typeCheckConfig(NAME, config, DefaultType)\n    return config\n  }\n\n  _showElement(relatedTarget) {\n    const isAnimated = this._isAnimated()\n    const modalBody = SelectorEngine.findOne(SELECTOR_MODAL_BODY, this._dialog)\n\n    if (!this._element.parentNode || this._element.parentNode.nodeType !== Node.ELEMENT_NODE) {\n      // Don't move modal's DOM position\n      document.body.appendChild(this._element)\n    }\n\n    this._element.style.display = 'block'\n    this._element.removeAttribute('aria-hidden')\n    this._element.setAttribute('aria-modal', true)\n    this._element.setAttribute('role', 'dialog')\n    this._element.scrollTop = 0\n\n    if (modalBody) {\n      modalBody.scrollTop = 0\n    }\n\n    if (isAnimated) {\n      reflow(this._element)\n    }\n\n    this._element.classList.add(CLASS_NAME_SHOW)\n\n    if (this._config.focus) {\n      this._enforceFocus()\n    }\n\n    const transitionComplete = () => {\n      if (this._config.focus) {\n        this._element.focus()\n      }\n\n      this._isTransitioning = false\n      EventHandler.trigger(this._element, EVENT_SHOWN, {\n        relatedTarget\n      })\n    }\n\n    this._queueCallback(transitionComplete, this._dialog, isAnimated)\n  }\n\n  _enforceFocus() {\n    EventHandler.off(document, EVENT_FOCUSIN) // guard against infinite focus loop\n    EventHandler.on(document, EVENT_FOCUSIN, event => {\n      if (document !== event.target &&\n          this._element !== event.target &&\n          !this._element.contains(event.target)) {\n        this._element.focus()\n      }\n    })\n  }\n\n  _setEscapeEvent() {\n    if (this._isShown) {\n      EventHandler.on(this._element, EVENT_KEYDOWN_DISMISS, event => {\n        if (this._config.keyboard && event.key === ESCAPE_KEY) {\n          event.preventDefault()\n          this.hide()\n        } else if (!this._config.keyboard && event.key === ESCAPE_KEY) {\n          this._triggerBackdropTransition()\n        }\n      })\n    } else {\n      EventHandler.off(this._element, EVENT_KEYDOWN_DISMISS)\n    }\n  }\n\n  _setResizeEvent() {\n    if (this._isShown) {\n      EventHandler.on(window, EVENT_RESIZE, () => this._adjustDialog())\n    } else {\n      EventHandler.off(window, EVENT_RESIZE)\n    }\n  }\n\n  _hideModal() {\n    this._element.style.display = 'none'\n    this._element.setAttribute('aria-hidden', true)\n    this._element.removeAttribute('aria-modal')\n    this._element.removeAttribute('role')\n    this._isTransitioning = false\n    this._backdrop.hide(() => {\n      document.body.classList.remove(CLASS_NAME_OPEN)\n      this._resetAdjustments()\n      this._scrollBar.reset()\n      EventHandler.trigger(this._element, EVENT_HIDDEN)\n    })\n  }\n\n  _showBackdrop(callback) {\n    EventHandler.on(this._element, EVENT_CLICK_DISMISS, event => {\n      if (this._ignoreBackdropClick) {\n        this._ignoreBackdropClick = false\n        return\n      }\n\n      if (event.target !== event.currentTarget) {\n        return\n      }\n\n      if (this._config.backdrop === true) {\n        this.hide()\n      } else if (this._config.backdrop === 'static') {\n        this._triggerBackdropTransition()\n      }\n    })\n\n    this._backdrop.show(callback)\n  }\n\n  _isAnimated() {\n    return this._element.classList.contains(CLASS_NAME_FADE)\n  }\n\n  _triggerBackdropTransition() {\n    const hideEvent = EventHandler.trigger(this._element, EVENT_HIDE_PREVENTED)\n    if (hideEvent.defaultPrevented) {\n      return\n    }\n\n    const { classList, scrollHeight, style } = this._element\n    const isModalOverflowing = scrollHeight > document.documentElement.clientHeight\n\n    // return if the following background transition hasn't yet completed\n    if ((!isModalOverflowing && style.overflowY === 'hidden') || classList.contains(CLASS_NAME_STATIC)) {\n      return\n    }\n\n    if (!isModalOverflowing) {\n      style.overflowY = 'hidden'\n    }\n\n    classList.add(CLASS_NAME_STATIC)\n    this._queueCallback(() => {\n      classList.remove(CLASS_NAME_STATIC)\n      if (!isModalOverflowing) {\n        this._queueCallback(() => {\n          style.overflowY = ''\n        }, this._dialog)\n      }\n    }, this._dialog)\n\n    this._element.focus()\n  }\n\n  // ----------------------------------------------------------------------\n  // the following methods are used to handle overflowing modals\n  // ----------------------------------------------------------------------\n\n  _adjustDialog() {\n    const isModalOverflowing = this._element.scrollHeight > document.documentElement.clientHeight\n    const scrollbarWidth = this._scrollBar.getWidth()\n    const isBodyOverflowing = scrollbarWidth > 0\n\n    if ((!isBodyOverflowing && isModalOverflowing && !isRTL()) || (isBodyOverflowing && !isModalOverflowing && isRTL())) {\n      this._element.style.paddingLeft = `${scrollbarWidth}px`\n    }\n\n    if ((isBodyOverflowing && !isModalOverflowing && !isRTL()) || (!isBodyOverflowing && isModalOverflowing && isRTL())) {\n      this._element.style.paddingRight = `${scrollbarWidth}px`\n    }\n  }\n\n  _resetAdjustments() {\n    this._element.style.paddingLeft = ''\n    this._element.style.paddingRight = ''\n  }\n\n  // Static\n\n  static jQueryInterface(config, relatedTarget) {\n    return this.each(function () {\n      const data = Modal.getOrCreateInstance(this, config)\n\n      if (typeof config !== 'string') {\n        return\n      }\n\n      if (typeof data[config] === 'undefined') {\n        throw new TypeError(`No method named \"${config}\"`)\n      }\n\n      data[config](relatedTarget)\n    })\n  }\n}\n\n/**\n * ------------------------------------------------------------------------\n * Data Api implementation\n * ------------------------------------------------------------------------\n */\n\nEventHandler.on(document, EVENT_CLICK_DATA_API, SELECTOR_DATA_TOGGLE, function (event) {\n  const target = getElementFromSelector(this)\n\n  if (['A', 'AREA'].includes(this.tagName)) {\n    event.preventDefault()\n  }\n\n  EventHandler.one(target, EVENT_SHOW, showEvent => {\n    if (showEvent.defaultPrevented) {\n      // only register focus restorer if modal will actually get shown\n      return\n    }\n\n    EventHandler.one(target, EVENT_HIDDEN, () => {\n      if (isVisible(this)) {\n        this.focus()\n      }\n    })\n  })\n\n  const data = Modal.getOrCreateInstance(target)\n\n  data.toggle(this)\n})\n\n/**\n * ------------------------------------------------------------------------\n * jQuery\n * ------------------------------------------------------------------------\n * add .Modal to jQuery only if jQuery is present\n */\n\ndefineJQueryPlugin(Modal)\n\nexport default Modal\n"]},"metadata":{},"sourceType":"module"}