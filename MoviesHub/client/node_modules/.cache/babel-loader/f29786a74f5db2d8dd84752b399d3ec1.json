{"ast":null,"code":"var _jsxFileName = \"E:\\\\Full-Stack-Project\\\\project-movie-app\\\\client\\\\src\\\\component\\\\moviesList\\\\MovieListItem.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport { toast } from \"react-toastify\";\nimport { addMovie, removeMovieById, getHigestMovieId, getMovieByTitle } from \"../../services/movies\";\nimport \"../App.css\";\nimport \"./MovieListItem.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MovieListItem = _ref => {\n  _s();\n\n  let {\n    movies,\n    path,\n    onRemove\n  } = _ref;\n  const toastTimeout = 1800;\n  const isFavouritePage = path === \"favourite\";\n  const {\n    title,\n    poster\n  } = movies;\n  var toPath = `${path}/${title}`;\n  const [isAdded, setIsAdded] = useState(false);\n\n  const addOrRemoveMovie = async () => {\n    try {\n      const movieByTitle = await getMovieByTitle(\"favourite\", movies.title);\n\n      if (movieByTitle !== null) {\n        const data = await removeMovieById(\"favourite\", movies.id);\n        toast.success(\"Successfully removed from Favourites...\", {\n          autoClose: toastTimeout\n        });\n        setIsAdded(false);\n        onRemove(movies.title);\n      } else {\n        const highestId = await getHigestMovieId(\"favourite\");\n        movies.id = highestId + 1;\n        await addMovie(\"favourite\", movies);\n        toast.success(\"Successfully added to Favourites...\", {\n          autoClose: toastTimeout\n        });\n        setIsAdded(true);\n      }\n    } catch (errormsg) {\n      toast.error(\"Something went wrong...\", {\n        autoClose: toastTimeout\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    id: `movie-card-${movies.id}`,\n    className: `my-3 zoom my-card w-100 ${isAdded ? \"added\" : \"\"}`,\n    style: {\n      width: \"18rem\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"a\", {\n      href: toPath,\n      children: /*#__PURE__*/_jsxDEV(Card.Img, {\n        className: \"card-img\",\n        variant: \"top\",\n        src: `${process.env.REACT_APP_API_BASE_URL}/img/${poster}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n      className: \"text-center\",\n      children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n        className: \"text-center\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: `button ${isAdded ? \"added\" : \"removed\"}`,\n          onClick: addOrRemoveMovie,\n          children: [isAdded ? \"Remove from favourite\" : \"Add to favourite\", /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"button__horizontal\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"button__vertical\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MovieListItem, \"RjciMIKXD5ZkeWAJCLVVDAtRue4=\");\n\n_c = MovieListItem;\nexport default MovieListItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieListItem\");","map":{"version":3,"sources":["E:/Full-Stack-Project/project-movie-app/client/src/component/moviesList/MovieListItem.tsx"],"names":["React","useState","Card","toast","addMovie","removeMovieById","getHigestMovieId","getMovieByTitle","MovieListItem","movies","path","onRemove","toastTimeout","isFavouritePage","title","poster","toPath","isAdded","setIsAdded","addOrRemoveMovie","movieByTitle","data","id","success","autoClose","highestId","errormsg","error","width","process","env","REACT_APP_API_BASE_URL"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { faHeart } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Button, Card } from \"react-bootstrap\";\r\nimport { toast } from \"react-toastify\";\r\nimport IMovies from \"../../model/IMovies\";\r\nimport {\r\n  addMovie,\r\n  removeMovieById,\r\n  getHigestMovieId,\r\n  getMovieByTitle,\r\n} from \"../../services/movies\";\r\nimport \"../App.css\";\r\nimport \"./MovieListItem.css\";\r\n\r\ntype Props = {\r\n  movies: IMovies;\r\n  path: string;\r\n  onRemove: (title: string) => void;\r\n};\r\n\r\nconst MovieListItem = ({ movies, path, onRemove }: Props) => {\r\n  const toastTimeout = 1800;\r\n  const isFavouritePage = path === \"favourite\";\r\n\r\n  const { title, poster } = movies;\r\n\r\n  var toPath = `${path}/${title}`;\r\n\r\n  const [isAdded, setIsAdded] = useState(false);\r\n\r\n  const addOrRemoveMovie = async () => {\r\n    try {\r\n      const movieByTitle = await getMovieByTitle(\"favourite\", movies.title);\r\n      if (movieByTitle !== null) {\r\n        const data = await removeMovieById(\"favourite\", movies.id);\r\n        toast.success(\"Successfully removed from Favourites...\", {\r\n          autoClose: toastTimeout,\r\n        });\r\n        setIsAdded(false);\r\n        onRemove(movies.title);\r\n      } else {\r\n        const highestId = await getHigestMovieId(\"favourite\");\r\n        movies.id = highestId + 1;\r\n        await addMovie(\"favourite\", movies);\r\n        toast.success(\"Successfully added to Favourites...\", {\r\n          autoClose: toastTimeout,\r\n        });\r\n        setIsAdded(true);\r\n      }\r\n    } catch (errormsg: any) {\r\n      toast.error(\"Something went wrong...\", { autoClose: toastTimeout });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card\r\n      id={`movie-card-${movies.id}`}\r\n      className={`my-3 zoom my-card w-100 ${isAdded ? \"added\" : \"\"}`}\r\n      style={{ width: \"18rem\" }}\r\n    >\r\n      <a href={toPath}>\r\n        <Card.Img\r\n          className=\"card-img\"\r\n          variant=\"top\"\r\n          src={`${process.env.REACT_APP_API_BASE_URL}/img/${poster}`}\r\n        />\r\n      </a>\r\n      <Card.Body className=\"text-center\">\r\n        <Card.Title>\r\n          <div>{title}</div>\r\n        </Card.Title>\r\n        <Card.Text className=\"text-center\">\r\n          <button\r\n            className={`button ${isAdded ? \"added\" : \"removed\"}`}\r\n            onClick={addOrRemoveMovie}\r\n          >\r\n            {isAdded ? \"Remove from favourite\" : \"Add to favourite\"}\r\n            <div className=\"button__horizontal\"></div>\r\n            <div className=\"button__vertical\"></div>\r\n          </button>\r\n        </Card.Text>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default MovieListItem;\r\n"]},"metadata":{},"sourceType":"module"}