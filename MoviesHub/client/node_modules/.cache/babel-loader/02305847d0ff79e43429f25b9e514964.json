{"ast":null,"code":"var _jsxFileName = \"E:\\\\Full-Stack-Project\\\\project-movie-app\\\\client\\\\src\\\\component\\\\moviesList\\\\MovieListItem.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport { toast } from \"react-toastify\";\nimport { addMovie, removeMovieById, getHigestMovieId, getMovieByTitle } from \"../services/movies\";\nimport \"../App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MovieListItem = _ref => {\n  _s();\n\n  let {\n    movies,\n    path,\n    onRemove\n  } = _ref;\n  const toastTimeout = 1800;\n  const isFavouritePage = path === \"favourite\";\n  const {\n    title,\n    poster\n  } = movies;\n  var toPath = `${path}/${title}`;\n  const [isAdded, setIsAdded] = useState(false);\n  const [isRemoved, setIsRemoved] = useState(false);\n\n  const addMovieToFavourite = async event => {\n    event.preventDefault();\n\n    try {\n      const movieByTitle = await getMovieByTitle(\"favourite\", movies.title);\n\n      if (movieByTitle !== null) {\n        toast.error(\"Already added to Favourites...\", {\n          autoClose: toastTimeout\n        });\n        return;\n      }\n\n      const highestId = await getHigestMovieId(\"favourite\");\n      movies.id = highestId + 1;\n      await addMovie(\"favourite\", movies);\n      toast.success(\"Successfully added to Favourites...\", {\n        autoClose: toastTimeout\n      }); // Apply the 'added' class to the button and change heart color to yellow\n\n      setIsAdded(true);\n    } catch (errormsg) {\n      toast.error(\"Not added to Favourites...\", {\n        autoClose: toastTimeout\n      });\n    }\n  };\n\n  const removeMovieFromFavourite = async event => {\n    event.preventDefault();\n\n    try {\n      if (movies.id === null) {\n        toast.warn(\"Cannot find the Movie Id to remove from the favourite list...\");\n      }\n\n      const data = await removeMovieById(\"favourite\", movies.id);\n      toast.success(\"Successfully removed from Favourites...\", {\n        autoClose: toastTimeout\n      }); // Apply the 'removed' class to the button and change heart color to red\n\n      setIsRemoved(true);\n      onRemove(movies.title);\n    } catch (errormsg) {\n      toast.error(\"Unable to remove from Favourites...\", {\n        autoClose: toastTimeout\n      });\n    }\n  };\n\n  const handleCardClick = () => {\n    // If the card is clicked, reset the button effects\n    setIsAdded(false);\n    setIsRemoved(false);\n    const cardElement = document.getElementById(`movie-card-${movies.id}`);\n\n    if (cardElement) {\n      cardElement.classList.add(\"clicked\");\n      setTimeout(() => {\n        cardElement.classList.remove(\"clicked\");\n      }, 300);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    id: `movie-card-${movies.id}`,\n    className: `my-3 zoom my-card w-100 ${isAdded ? \"added\" : \"\"} ${isRemoved ? \"removed\" : \"\"}`,\n    style: {\n      width: \"20rem\"\n    },\n    onClick: handleCardClick,\n    children: [/*#__PURE__*/_jsxDEV(\"a\", {\n      href: toPath,\n      children: /*#__PURE__*/_jsxDEV(Card.Img, {\n        className: \"card-img\",\n        variant: \"top\",\n        src: `${process.env.REACT_APP_API_BASE_URL}/img/${poster}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n      className: \"text-center\",\n      children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n        className: \"text-center\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-container\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"button\",\n            className: `button ${isFavouritePage ? \"added\" : \"removed\"}`,\n            onClick: isFavouritePage ? removeMovieFromFavourite : addMovieToFavourite,\n            children: [isFavouritePage ? \"Remove from favourite\" : \"Add to favourite\", /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"button__horizontal\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"button__vertical\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MovieListItem, \"bVRT/kyR165C9vo0Hh/K2Iop2Mk=\");\n\n_c = MovieListItem;\nexport default MovieListItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieListItem\");","map":{"version":3,"sources":["E:/Full-Stack-Project/project-movie-app/client/src/component/moviesList/MovieListItem.tsx"],"names":["React","useState","Card","toast","addMovie","removeMovieById","getHigestMovieId","getMovieByTitle","MovieListItem","movies","path","onRemove","toastTimeout","isFavouritePage","title","poster","toPath","isAdded","setIsAdded","isRemoved","setIsRemoved","addMovieToFavourite","event","preventDefault","movieByTitle","error","autoClose","highestId","id","success","errormsg","removeMovieFromFavourite","warn","data","handleCardClick","cardElement","document","getElementById","classList","add","setTimeout","remove","width","process","env","REACT_APP_API_BASE_URL"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { faHeart } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Button, Card } from \"react-bootstrap\";\r\nimport { toast } from \"react-toastify\";\r\nimport IMovies from \"../model/IMovies\";\r\nimport {\r\n  addMovie,\r\n  removeMovieById,\r\n  getHigestMovieId,\r\n  getMovieByTitle,\r\n} from \"../services/movies\";\r\nimport \"../App.css\";\r\n\r\ntype Props = {\r\n  movies: IMovies;\r\n  path: string;\r\n  onRemove: (title: string) => void;\r\n};\r\n\r\nconst MovieListItem = ({ movies, path, onRemove }: Props) => {\r\n  const toastTimeout = 1800;\r\n  const isFavouritePage = path === \"favourite\";\r\n\r\n  const { title, poster } = movies;\r\n\r\n  var toPath = `${path}/${title}`;\r\n\r\n  const [isAdded, setIsAdded] = useState(false);\r\n  const [isRemoved, setIsRemoved] = useState(false);\r\n\r\n  const addMovieToFavourite = async (\r\n    event: React.MouseEvent<HTMLButtonElement>\r\n  ) => {\r\n    event.preventDefault();\r\n    try {\r\n      const movieByTitle = await getMovieByTitle(\"favourite\", movies.title);\r\n      if (movieByTitle !== null) {\r\n        toast.error(\"Already added to Favourites...\", {\r\n          autoClose: toastTimeout,\r\n        });\r\n        return;\r\n      }\r\n\r\n      const highestId = await getHigestMovieId(\"favourite\");\r\n      movies.id = highestId + 1;\r\n      await addMovie(\"favourite\", movies);\r\n      toast.success(\"Successfully added to Favourites...\", {\r\n        autoClose: toastTimeout,\r\n      });\r\n\r\n      // Apply the 'added' class to the button and change heart color to yellow\r\n      setIsAdded(true);\r\n    } catch (errormsg: any) {\r\n      toast.error(\"Not added to Favourites...\", { autoClose: toastTimeout });\r\n    }\r\n  };\r\n\r\n  const removeMovieFromFavourite = async (\r\n    event: React.MouseEvent<HTMLButtonElement>\r\n  ) => {\r\n    event.preventDefault();\r\n    try {\r\n      if (movies.id === null) {\r\n        toast.warn(\r\n          \"Cannot find the Movie Id to remove from the favourite list...\"\r\n        );\r\n      }\r\n      const data = await removeMovieById(\"favourite\", movies.id);\r\n      toast.success(\"Successfully removed from Favourites...\", {\r\n        autoClose: toastTimeout,\r\n      });\r\n\r\n      // Apply the 'removed' class to the button and change heart color to red\r\n      setIsRemoved(true);\r\n\r\n      onRemove(movies.title);\r\n    } catch (errormsg: any) {\r\n      toast.error(\"Unable to remove from Favourites...\", {\r\n        autoClose: toastTimeout,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleCardClick = () => {\r\n    // If the card is clicked, reset the button effects\r\n    setIsAdded(false);\r\n    setIsRemoved(false);\r\n\r\n    const cardElement = document.getElementById(`movie-card-${movies.id}`);\r\n    if (cardElement) {\r\n      cardElement.classList.add(\"clicked\");\r\n      setTimeout(() => {\r\n        cardElement.classList.remove(\"clicked\");\r\n      }, 300);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card\r\n      id={`movie-card-${movies.id}`}\r\n      className={`my-3 zoom my-card w-100 ${isAdded ? \"added\" : \"\"} ${\r\n        isRemoved ? \"removed\" : \"\"\r\n      }`}\r\n      style={{ width: \"20rem\" }}\r\n      onClick={handleCardClick}\r\n    >\r\n      <a href={toPath}>\r\n        <Card.Img\r\n          className=\"card-img\"\r\n          variant=\"top\"\r\n          src={`${process.env.REACT_APP_API_BASE_URL}/img/${poster}`}\r\n        />\r\n      </a>\r\n      <Card.Body className=\"text-center\">\r\n        <Card.Title>\r\n          <div>{title}</div>\r\n        </Card.Title>\r\n        <Card.Text className=\"text-center\">\r\n          <div className=\"button-container\">\r\n            <button\r\n              id=\"button\"\r\n              className={`button ${isFavouritePage ? \"added\" : \"removed\"}`}\r\n              onClick={\r\n                isFavouritePage ? removeMovieFromFavourite : addMovieToFavourite\r\n              }\r\n            >\r\n              {isFavouritePage ? \"Remove from favourite\" : \"Add to favourite\"}\r\n              <div className=\"button__horizontal\"></div>\r\n              <div className=\"button__vertical\"></div>\r\n            </button>\r\n          </div>\r\n        </Card.Text>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default MovieListItem;\r\n"]},"metadata":{},"sourceType":"module"}