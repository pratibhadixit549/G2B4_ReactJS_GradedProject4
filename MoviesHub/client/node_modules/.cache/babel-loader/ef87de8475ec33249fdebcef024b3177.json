{"ast":null,"code":"var _jsxFileName = \"E:\\\\personal-projects\\\\G1-S5_ReactJS_GradedProject4\\\\GradedProject_ReactJS\\\\client\\\\src\\\\component\\\\moviesList\\\\MovieListItem.tsx\";\nimport { faHeart } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Button, Card } from \"react-bootstrap\";\nimport { toast } from \"react-toastify\";\nimport { addMovie, removeMovieById, getHigestMovieId, getMovieByTitle } from \"../../services/movies\";\nimport \"../App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MovieListItem = _ref => {\n  let {\n    movies,\n    path,\n    onRemove\n  } = _ref;\n  const toastTimeout = 1500;\n  const isFavouritePage = path === \"favourite\";\n  const {\n    title,\n    poster\n  } = movies;\n  var toPath = `${path}/${title}`;\n\n  const addMovieToFavourite = async event => {\n    event.preventDefault();\n\n    try {\n      const movieByTitle = await getMovieByTitle(\"favourite\", movies.title);\n\n      if (movieByTitle !== null) {\n        toast.error(\"Already added to Favourites...\", {\n          autoClose: toastTimeout\n        });\n        return;\n      }\n\n      const highestId = await getHigestMovieId(\"favourite\");\n      movies.id = highestId + 1;\n      await addMovie(\"favourite\", movies);\n      toast.success(\"Successfully added to Favourites...\", {\n        autoClose: toastTimeout\n      });\n    } catch (errormsg) {\n      toast.error(\"Not added the Favourites...\", {\n        autoClose: toastTimeout\n      });\n    }\n  };\n\n  const removeMovieFromFavourite = async event => {\n    event.preventDefault();\n\n    try {\n      if (movies.id === null) {\n        toast.warn(\"Cannot Find the Movie Id to remove from the favourite list...\");\n      }\n\n      const data = await removeMovieById(\"favourite\", movies.id);\n      toast.success(\"Successfully removed from Favourites...\", {\n        autoClose: toastTimeout\n      });\n      onRemove(movies.title);\n    } catch (errormsg) {\n      toast.error(\"Unable to remove from Favourites...\", {\n        autoClose: toastTimeout\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \" my-3 zoom w-100\",\n    style: {\n      width: '18rem'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"a\", {\n      href: toPath,\n      children: /*#__PURE__*/_jsxDEV(Card.Img, {\n        style: {\n          height: '25rem',\n          width: '15rem'\n        },\n        variant: \"top\",\n        src: `${process.env.REACT_APP_API_BASE_URL}/img/${poster}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n      className: \"text-center\",\n      children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n        className: \"text-center \",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          className: \"btn btnClass\",\n          hidden: isFavouritePage,\n          onClick: addMovieToFavourite,\n          children: [\"Add to favourite\", /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faHeart,\n            className: \"ms-2 fa-sm\",\n            color: \"Red\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"btn btnClass \",\n          hidden: !isFavouritePage,\n          onClick: removeMovieFromFavourite,\n          children: [\"Remove from favourite\", /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faHeart,\n            className: \"ms-2 fa-sm\",\n            color: \"Grey\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n\n_c = MovieListItem;\nexport default MovieListItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieListItem\");","map":{"version":3,"sources":["E:/personal-projects/G1-S5_ReactJS_GradedProject4/GradedProject_ReactJS/client/src/component/moviesList/MovieListItem.tsx"],"names":["faHeart","FontAwesomeIcon","Button","Card","toast","addMovie","removeMovieById","getHigestMovieId","getMovieByTitle","MovieListItem","movies","path","onRemove","toastTimeout","isFavouritePage","title","poster","toPath","addMovieToFavourite","event","preventDefault","movieByTitle","error","autoClose","highestId","id","success","errormsg","removeMovieFromFavourite","warn","data","width","height","process","env","REACT_APP_API_BASE_URL"],"mappings":"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","sourcesContent":["import { faHeart } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { Button, Card } from \"react-bootstrap\";\r\nimport { toast } from \"react-toastify\";\r\nimport IMovies from \"../../model/IMovies\";\r\nimport { addMovie, removeMovieById, getHigestMovieId, getMovieByTitle } from \"../../services/movies\";\r\nimport \"../App.css\"\r\n\r\ntype Props = {\r\n    movies: IMovies\r\n    path: string\r\n    onRemove: (title: string) => void\r\n};\r\n\r\nconst MovieListItem = ({ movies, path, onRemove }: Props) => {\r\n    const toastTimeout = 1500;\r\n    const isFavouritePage = path === \"favourite\";\r\n\r\n    const { title, poster } = movies;\r\n\r\n    var toPath = `${path}/${title}`\r\n\r\n    const addMovieToFavourite = async (event: React.MouseEvent<HTMLButtonElement>) => {\r\n        event.preventDefault();\r\n        try {\r\n            const movieByTitle = await getMovieByTitle(\"favourite\", movies.title);\r\n            if (movieByTitle !== null) {\r\n                toast.error(\"Already added to Favourites...\", { autoClose: toastTimeout })\r\n                return;\r\n            }\r\n\r\n            const highestId = await getHigestMovieId(\"favourite\");\r\n            movies.id = highestId + 1;\r\n            await addMovie(\"favourite\", movies);\r\n            toast.success(\"Successfully added to Favourites...\", { autoClose: toastTimeout })\r\n        }\r\n        catch (errormsg: any) {\r\n            toast.error(\"Not added the Favourites...\", { autoClose: toastTimeout })\r\n        }\r\n    };\r\n\r\n    const removeMovieFromFavourite = async (event: React.MouseEvent<HTMLButtonElement>) => {\r\n        event.preventDefault();\r\n        try {\r\n            if (movies.id === null) {\r\n                toast.warn(\"Cannot Find the Movie Id to remove from the favourite list...\");\r\n            }\r\n            const data = await removeMovieById(\"favourite\", movies.id);\r\n            toast.success(\"Successfully removed from Favourites...\", { autoClose: toastTimeout })\r\n            onRemove(movies.title);\r\n        }\r\n        catch (errormsg: any) {\r\n            toast.error(\"Unable to remove from Favourites...\", { autoClose: toastTimeout })\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Card className=\" my-3 zoom w-100\" style={{ width: '18rem' }}>\r\n            <a href={toPath}>\r\n                <Card.Img style={{ height: '25rem', width: '15rem'}} variant=\"top\" src={`${process.env.REACT_APP_API_BASE_URL}/img/${poster}`} />\r\n            </a>\r\n            <Card.Body className=\"text-center\" >\r\n                <Card.Title>\r\n                    <div>\r\n                        {title}\r\n                    </div>\r\n                </Card.Title>\r\n                <Card.Text className=\"text-center \" >\r\n\r\n                    <Button className=\"btn btnClass\" hidden={isFavouritePage} onClick={addMovieToFavourite}>\r\n                        Add to favourite\r\n                        <FontAwesomeIcon icon={faHeart}\r\n                            className=\"ms-2 fa-sm\"\r\n                            color=\"Red\"\r\n                        /></Button>\r\n                    <Button className=\"btn btnClass \" hidden={!isFavouritePage} onClick={removeMovieFromFavourite}>Remove from favourite\r\n                        <FontAwesomeIcon icon={faHeart}\r\n                            className=\"ms-2 fa-sm\"\r\n                            color=\"Grey\"\r\n                        /></Button>\r\n                </Card.Text>\r\n            </Card.Body>\r\n        </Card>\r\n        \r\n    );\r\n};\r\n\r\nexport default MovieListItem"]},"metadata":{},"sourceType":"module"}