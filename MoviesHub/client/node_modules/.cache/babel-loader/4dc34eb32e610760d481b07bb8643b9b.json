{"ast":null,"code":"var _jsxFileName = \"E:\\\\Full-Stack-Project\\\\project-movie-app\\\\client\\\\src\\\\component\\\\moviesList\\\\MovieListItem.tsx\";\nimport React from 'react';\nimport { faHeart } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { Button, Card } from 'react-bootstrap';\nimport { toast } from 'react-toastify';\nimport { addMovie, removeMovieById, getHigestMovieId, getMovieByTitle } from '../../services/movies';\nimport '../App.css';\nimport './MovieListItem.css'; // Import the CSS file\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MovieListItem = _ref => {\n  let {\n    movies,\n    path,\n    onRemove\n  } = _ref;\n  const toastTimeout = 1800;\n  const isFavouritePage = path === 'favourite';\n  const {\n    title,\n    poster\n  } = movies;\n  var toPath = `${path}/${title}`;\n\n  const addMovieToFavourite = async event => {\n    event.preventDefault();\n\n    try {\n      const movieByTitle = await getMovieByTitle('favourite', movies.title);\n\n      if (movieByTitle !== null) {\n        toast.error('Already added to Favourites...', {\n          autoClose: toastTimeout\n        });\n        return;\n      }\n\n      const highestId = await getHigestMovieId('favourite');\n      movies.id = highestId + 1;\n      await addMovie('favourite', movies);\n      toast.success('Successfully added to Favourites...', {\n        autoClose: toastTimeout\n      });\n    } catch (errormsg) {\n      toast.error('Not added to Favourites...', {\n        autoClose: toastTimeout\n      });\n    }\n  };\n\n  const removeMovieFromFavourite = async event => {\n    event.preventDefault();\n\n    try {\n      if (movies.id === null) {\n        toast.warn('Cannot find the Movie Id to remove from the favourite list...');\n      }\n\n      const data = await removeMovieById('favourite', movies.id);\n      toast.success('Successfully removed from Favourites...', {\n        autoClose: toastTimeout\n      });\n      onRemove(movies.title);\n    } catch (errormsg) {\n      toast.error('Unable to remove from Favourites...', {\n        autoClose: toastTimeout\n      });\n    }\n  };\n\n  const handleCardClick = () => {\n    // Add a CSS class to the card when clicked\n    const cardElement = document.getElementById(`movie-card-${movies.id}`);\n\n    if (cardElement) {\n      cardElement.classList.add('clicked');\n      setTimeout(() => {\n        cardElement.classList.remove('clicked');\n      }, 300);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    id: `movie-card-${movies.id}` // Add a unique ID to each card\n    ,\n    className: \"my-3 zoom my-card w-100\",\n    style: {\n      width: '18rem'\n    },\n    onClick: handleCardClick,\n    children: [/*#__PURE__*/_jsxDEV(\"a\", {\n      href: toPath,\n      children: /*#__PURE__*/_jsxDEV(Card.Img, {\n        className: \"card-img\",\n        variant: \"top\",\n        src: `${process.env.REACT_APP_API_BASE_URL}/img/${poster}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n      className: \"text-center\",\n      children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          className: \"btn btnClass\",\n          hidden: isFavouritePage,\n          onClick: addMovieToFavourite,\n          children: [\"Add to favourite\", /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faHeart,\n            className: \"ms-2 fa-sm\",\n            color: \"Red\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          className: \"btn btnClass\",\n          hidden: !isFavouritePage,\n          onClick: removeMovieFromFavourite,\n          children: [\"Remove from favourite\", /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n            icon: faHeart,\n            className: \"ms-2 fa-sm\",\n            color: \"Grey\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n\n_c = MovieListItem;\nexport default MovieListItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieListItem\");","map":{"version":3,"sources":["E:/Full-Stack-Project/project-movie-app/client/src/component/moviesList/MovieListItem.tsx"],"names":["React","faHeart","FontAwesomeIcon","Button","Card","toast","addMovie","removeMovieById","getHigestMovieId","getMovieByTitle","MovieListItem","movies","path","onRemove","toastTimeout","isFavouritePage","title","poster","toPath","addMovieToFavourite","event","preventDefault","movieByTitle","error","autoClose","highestId","id","success","errormsg","removeMovieFromFavourite","warn","data","handleCardClick","cardElement","document","getElementById","classList","add","setTimeout","remove","width","process","env","REACT_APP_API_BASE_URL"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { faHeart } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { Button, Card } from 'react-bootstrap';\r\nimport { toast } from 'react-toastify';\r\nimport IMovies from '../../model/IMovies';\r\nimport {\r\n  addMovie,\r\n  removeMovieById,\r\n  getHigestMovieId,\r\n  getMovieByTitle,\r\n} from '../../services/movies';\r\nimport '../App.css';\r\nimport './MovieListItem.css'; // Import the CSS file\r\n\r\ntype Props = {\r\n  movies: IMovies;\r\n  path: string;\r\n  onRemove: (title: string) => void;\r\n};\r\n\r\nconst MovieListItem = ({ movies, path, onRemove }: Props) => {\r\n  const toastTimeout = 1800;\r\n  const isFavouritePage = path === 'favourite';\r\n\r\n  const { title, poster } = movies;\r\n\r\n  var toPath = `${path}/${title}`;\r\n\r\n  const addMovieToFavourite = async (\r\n    event: React.MouseEvent<HTMLButtonElement>\r\n  ) => {\r\n    event.preventDefault();\r\n    try {\r\n      const movieByTitle = await getMovieByTitle('favourite', movies.title);\r\n      if (movieByTitle !== null) {\r\n        toast.error('Already added to Favourites...', { autoClose: toastTimeout });\r\n        return;\r\n      }\r\n\r\n      const highestId = await getHigestMovieId('favourite');\r\n      movies.id = highestId + 1;\r\n      await addMovie('favourite', movies);\r\n      toast.success('Successfully added to Favourites...', { autoClose: toastTimeout });\r\n    } catch (errormsg: any) {\r\n      toast.error('Not added to Favourites...', { autoClose: toastTimeout });\r\n    }\r\n  };\r\n\r\n  const removeMovieFromFavourite = async (\r\n    event: React.MouseEvent<HTMLButtonElement>\r\n  ) => {\r\n    event.preventDefault();\r\n    try {\r\n      if (movies.id === null) {\r\n        toast.warn('Cannot find the Movie Id to remove from the favourite list...');\r\n      }\r\n      const data = await removeMovieById('favourite', movies.id);\r\n      toast.success('Successfully removed from Favourites...', { autoClose: toastTimeout });\r\n      onRemove(movies.title);\r\n    } catch (errormsg: any) {\r\n      toast.error('Unable to remove from Favourites...', { autoClose: toastTimeout });\r\n    }\r\n  };\r\n\r\n  const handleCardClick = () => {\r\n    // Add a CSS class to the card when clicked\r\n    const cardElement = document.getElementById(`movie-card-${movies.id}`);\r\n    if (cardElement) {\r\n      cardElement.classList.add('clicked');\r\n      setTimeout(() => {\r\n        cardElement.classList.remove('clicked');\r\n      }, 300);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card\r\n      id={`movie-card-${movies.id}`} // Add a unique ID to each card\r\n      className=\"my-3 zoom my-card w-100\"\r\n      style={{ width: '18rem' }}\r\n      onClick={handleCardClick}\r\n    >\r\n      <a href={toPath}>\r\n        <Card.Img\r\n          className=\"card-img\"\r\n          variant=\"top\"\r\n          src={`${process.env.REACT_APP_API_BASE_URL}/img/${poster}`}\r\n        />\r\n      </a>\r\n      <Card.Body className=\"text-center\">\r\n        <Card.Title>\r\n          <div>{title}</div>\r\n        </Card.Title>\r\n        <Card.Text className=\"text-center\">\r\n          <Button className=\"btn btnClass\" hidden={isFavouritePage} onClick={addMovieToFavourite}>\r\n            Add to favourite\r\n            <FontAwesomeIcon icon={faHeart} className=\"ms-2 fa-sm\" color=\"Red\" />\r\n          </Button>\r\n          <Button className=\"btn btnClass\" hidden={!isFavouritePage} onClick={removeMovieFromFavourite}>\r\n            Remove from favourite\r\n            <FontAwesomeIcon icon={faHeart} className=\"ms-2 fa-sm\" color=\"Grey\" />\r\n          </Button>\r\n        </Card.Text>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default MovieListItem;\r\n"]},"metadata":{},"sourceType":"module"}