[{"E:\\VSCode Files\\Making-React-App\\IndustrialProject\\ShrishtiSaxena\\G2B7_ReactJS_GradedProject4-main\\client\\src\\index.tsx":"1","E:\\VSCode Files\\Making-React-App\\IndustrialProject\\ShrishtiSaxena\\G2B7_ReactJS_GradedProject4-main\\client\\src\\component\\App.tsx":"2","E:\\VSCode Files\\Making-React-App\\IndustrialProject\\ShrishtiSaxena\\G2B7_ReactJS_GradedProject4-main\\client\\src\\component\\global\\Navigation.tsx":"3","E:\\VSCode Files\\Making-React-App\\IndustrialProject\\ShrishtiSaxena\\G2B7_ReactJS_GradedProject4-main\\client\\src\\component\\global\\Home.tsx":"4","E:\\VSCode Files\\Making-React-App\\IndustrialProject\\ShrishtiSaxena\\G2B7_ReactJS_GradedProject4-main\\client\\src\\component\\moviesList\\MoviesList.tsx":"5","E:\\VSCode Files\\Making-React-App\\IndustrialProject\\ShrishtiSaxena\\G2B7_ReactJS_GradedProject4-main\\client\\src\\component\\moviesDetails\\MoviesDetails.tsx":"6","E:\\VSCode Files\\Making-React-App\\IndustrialProject\\ShrishtiSaxena\\G2B7_ReactJS_GradedProject4-main\\client\\src\\component\\global\\NoDataMatched.tsx":"7","E:\\VSCode Files\\Making-React-App\\IndustrialProject\\ShrishtiSaxena\\G2B7_ReactJS_GradedProject4-main\\client\\src\\component\\moviesList\\MovieListItem.tsx":"8","E:\\VSCode Files\\Making-React-App\\IndustrialProject\\ShrishtiSaxena\\G2B7_ReactJS_GradedProject4-main\\client\\src\\services\\movies.ts":"9","E:\\VSCode Files\\Making-React-App\\IndustrialProject\\ShrishtiSaxena\\G2B7_ReactJS_GradedProject4-main\\client\\src\\component\\common\\LoadingIndicator.tsx":"10"},{"size":277,"mtime":1694337243000,"results":"11","hashOfConfig":"12"},{"size":1531,"mtime":1724973182705,"results":"13","hashOfConfig":"12"},{"size":2021,"mtime":1724973062689,"results":"14","hashOfConfig":"12"},{"size":2058,"mtime":1724976768094,"results":"15","hashOfConfig":"12"},{"size":4957,"mtime":1724963678232,"results":"16","hashOfConfig":"12"},{"size":15551,"mtime":1725015227695,"results":"17","hashOfConfig":"12"},{"size":357,"mtime":1694337243000,"results":"18","hashOfConfig":"12"},{"size":3878,"mtime":1694337243000,"results":"19","hashOfConfig":"12"},{"size":1434,"mtime":1694337243000,"results":"20","hashOfConfig":"12"},{"size":773,"mtime":1694337243000,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"k8dblr",{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"25"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"25"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"25"},"E:\\VSCode Files\\Making-React-App\\IndustrialProject\\ShrishtiSaxena\\G2B7_ReactJS_GradedProject4-main\\client\\src\\index.tsx",[],[],[],"E:\\VSCode Files\\Making-React-App\\IndustrialProject\\ShrishtiSaxena\\G2B7_ReactJS_GradedProject4-main\\client\\src\\component\\App.tsx",[],[],"E:\\VSCode Files\\Making-React-App\\IndustrialProject\\ShrishtiSaxena\\G2B7_ReactJS_GradedProject4-main\\client\\src\\component\\global\\Navigation.tsx",[],[],"E:\\VSCode Files\\Making-React-App\\IndustrialProject\\ShrishtiSaxena\\G2B7_ReactJS_GradedProject4-main\\client\\src\\component\\global\\Home.tsx",[],[],"E:\\VSCode Files\\Making-React-App\\IndustrialProject\\ShrishtiSaxena\\G2B7_ReactJS_GradedProject4-main\\client\\src\\component\\moviesList\\MoviesList.tsx",["55","56"],[],"import { faSearch } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { Component } from \"react\";\nimport { Alert, Col, Row } from \"react-bootstrap\";\nimport { RouteComponentProps } from \"react-router\";\nimport IMovies from \"../../model/IMovies\";\nimport { getMovies } from \"../../services/movies\";\nimport { LoadingStatus } from \"../../services/types\";\nimport LoadingIndicator from \"../common/LoadingIndicator\";\nimport NoDataMatched from \"../global/NoDataMatched\";\nimport MovieListItem from \"./MovieListItem\";\nimport \"./search-bar.css\";\n\ntype State = {\n  status: LoadingStatus;\n  movies?: IMovies[];\n  moviesToShow?: IMovies[];\n  error?: Error;\n  searchString: string;\n};\n\ntype Props = {\n  moviesCategory: string;\n};\n\nclass MoviesList extends Component<RouteComponentProps<Props>, State> {\n  state: State = {\n    status: \"LOADING\",\n    searchString: \"\",\n  };\n\n  updateValue = (\n    event: React.ChangeEvent<HTMLInputElement | HTMLTextAreaElement>\n  ) => {\n    const { value } = event.target;\n\n    this.setState(\n      () => {\n        return {\n          searchString: value,\n        };\n      },\n      () => {\n        this.searchMovie(this.state.searchString);\n      }\n    );\n  };\n\n  searchMovie(searchString: string) {\n    this.setState({\n      status: \"LOADING\",\n    });\n\n    const moviesToShow = this.state.movies?.filter((x) => {\n      return x.title.toLowerCase().includes(searchString.toLowerCase());\n    });\n    this.setState({\n      status: \"LOADED\",\n      moviesToShow,\n    });\n  }\n\n  removeMovieFromFavourite = (title: string) => {\n    this.setState({\n      status: \"LOADING\",\n    });\n\n    const moviesToShow = this.state.moviesToShow?.filter(\n      (movie) => movie.title !== title\n    );\n\n    this.setState({\n      status: \"LOADED\",\n      moviesToShow,\n    });\n  };\n\n  render() {\n    const { status, moviesToShow, error, searchString } = this.state;\n\n    let el;\n\n    switch (status) {\n      case \"LOADING\":\n        el = (\n          <LoadingIndicator\n            size=\"large\"\n            message=\"We are Fetching the List of Movies. Please wait....\"\n          />\n        );\n        break;\n      case \"LOADING_ERROR\":\n        let msg = error?.message ?? \"\";\n\n        if (msg?.indexOf(\"404\") > -1) {\n          el = <NoDataMatched />;\n        } else {\n          el = <Alert variant=\"danger\">{error?.message}</Alert>;\n        }\n        break;\n      case \"LOADED\":\n        el = (\n          <>\n            <div className=\"container\">\n              <input\n                type=\"search\"\n                placeholder=\"Search movie...\"\n                value={searchString}\n                onChange={this.updateValue}\n              />\n              <div className=\"search\"></div>\n            </div>\n            <Row xs={2} md={3} lg={5}>\n              {/* {moviesToShow?.map((movies, idx) => (\n                <Col key={idx} className=\"d-flex align-items-stretch my-3\">\n                  <MovieListItem\n                    movies={movies}\n                    path={this.props.match.params.moviesCategory}\n                    onRemove={this.removeMovieFromFavourite}\n                  />\n                </Col>\n              ))} */}\n              {moviesToShow && moviesToShow.length!==0? moviesToShow && moviesToShow.map((movies, idx) => (\n                <Col key={idx} className=\"d-flex align-items-stretch my-3\">\n                  <MovieListItem\n                    movies={movies}\n                    path={this.props.match.params.moviesCategory}\n                    onRemove={this.removeMovieFromFavourite}\n                  />\n                </Col>\n              )) : <div style={{position:'absolute', alignItems:'center',top:'50%', left:'53%', transform: 'translate(-50%, -50%)', fontWeight:'Bold', fontSize:'160%'}}>No data found...</div>}\n              {/* // <div style={{display:'flex',justifyContent:'center',alignItems:'center'}}>No data found</div>} */}\n              {/* <div style={{display:'flex', justifyContent:'center', alignItems:'center', top: '50%', left:'50%'}}>No data found</div>} */}\n            </Row>\n          </>\n        );\n\n\n        break;\n      default:\n        break;\n    }\n\n    return el;\n  }\n\n  \n\n  async componentDidUpdate(prevProps: RouteComponentProps<Props>) {\n    if (\n      this.props.match.params.moviesCategory !==\n      prevProps.match.params.moviesCategory\n    ) {\n      await this.reloadMovieList();\n    }\n  }\n\n  \n\n  reloadMovieList = async () => {\n    this.setState({\n      status: \"LOADING\",\n    });\n\n    try {\n      const movies = await getMovies(this.props.match.params.moviesCategory);\n      const moviesToShow = movies;\n      this.setState({\n        status: \"LOADED\",\n        movies,\n        moviesToShow,\n      });\n    } catch (error) {\n      this.setState({\n        status: \"LOADING_ERROR\",\n        error: error as Error,\n      });\n    }\n  };\n\n  async componentDidMount() {\n    await this.reloadMovieList();\n  }\n}\n\nexport default MoviesList;\n","E:\\VSCode Files\\Making-React-App\\IndustrialProject\\ShrishtiSaxena\\G2B7_ReactJS_GradedProject4-main\\client\\src\\component\\moviesDetails\\MoviesDetails.tsx",["57","58","59"],[],"E:\\VSCode Files\\Making-React-App\\IndustrialProject\\ShrishtiSaxena\\G2B7_ReactJS_GradedProject4-main\\client\\src\\component\\global\\NoDataMatched.tsx",[],[],"E:\\VSCode Files\\Making-React-App\\IndustrialProject\\ShrishtiSaxena\\G2B7_ReactJS_GradedProject4-main\\client\\src\\component\\moviesList\\MovieListItem.tsx",["60"],[],"import React, { useState } from \"react\";\nimport { Card } from \"react-bootstrap\";\nimport { toast } from \"react-toastify\";\nimport IMovies from \"../../model/IMovies\";\nimport {\n  addMovie,\n  removeMovieById,\n  getHigestMovieId,\n  getMovieByTitle,\n} from \"../../services/movies\";\nimport \"../App.css\";\n\ntype Props = {\n  movies: IMovies;\n  path: string;\n  onRemove: (title: string) => void;\n};\n\nconst MovieListItem = ({ movies, path, onRemove }: Props) => {\n  const toastTimeout = 1800;\n  const isFavouritePage = path === \"favourite\";\n\n  const { title, poster } = movies;\n\n  var toPath = `${path}/${title}`;\n\n  const [isAdded, setIsAdded] = useState(false);\n  const [isRemoved, setIsRemoved] = useState(false);\n\n  const addMovieToFavourite = async (\n    event: React.MouseEvent<HTMLButtonElement>\n  ) => {\n    event.preventDefault();\n    try {\n      const movieByTitle = await getMovieByTitle(\"favourite\", movies.title);\n      if (movieByTitle !== null) {\n        toast.error(\"Already added to Favourites...\", {\n          autoClose: toastTimeout,\n        });\n        return;\n      }\n\n      const highestId = await getHigestMovieId(\"favourite\");\n      movies.id = highestId + 1;\n      await addMovie(\"favourite\", movies);\n      toast.success(\"Successfully added to Favourites...\", {\n        autoClose: toastTimeout,\n      });\n\n      // Apply the 'added' class to the button and change heart color to yellow\n      setIsAdded(true);\n    } catch (errormsg: any) {\n      toast.error(\"Not added to Favourites...\", { autoClose: toastTimeout });\n    }\n  };\n\n  const removeMovieFromFavourite = async (\n    event: React.MouseEvent<HTMLButtonElement>\n  ) => {\n    event.preventDefault();\n    try {\n      if (movies.id === null) {\n        toast.warn(\n          \"Cannot find the Movie Id to remove from the favourite list...\"\n        );\n      }\n      const data = await removeMovieById(\"favourite\", movies.id);\n      toast.success(\"Successfully removed from Favourites...\", {\n        autoClose: toastTimeout,\n      });\n\n      // Apply the 'removed' class to the button and change heart color to red\n      setIsRemoved(true);\n\n      onRemove(movies.title);\n    } catch (errormsg: any) {\n      toast.error(\"Unable to remove from Favourites...\", {\n        autoClose: toastTimeout,\n      });\n    }\n  };\n\n  const handleCardClick = () => {\n    // If the card is clicked, reset the button effects\n    setIsAdded(false);\n    setIsRemoved(false);\n\n    const cardElement = document.getElementById(`movie-card-${movies.id}`);\n    if (cardElement) {\n      cardElement.classList.add(\"clicked\");\n      setTimeout(() => {\n        cardElement.classList.remove(\"clicked\");\n      }, 300);\n    }\n  };\n\n  return (\n    <Card\n      id={`movie-card-${movies.id}`}\n      className={`my-3 zoom my-card w-100 ${isAdded ? \"added\" : \"\"} ${\n        isRemoved ? \"removed\" : \"\"\n      }`}\n      style={{ width: \"20rem\" }}\n      onClick={handleCardClick}\n    >\n      <a href={toPath}>\n        <Card.Img\n          className=\"card-img\"\n          variant=\"top\"\n          src={`${process.env.REACT_APP_API_BASE_URL}/img/${poster}`}\n        />\n      </a>\n      <Card.Body className=\"text-center\">\n        <Card.Title>\n          <div>{title}</div>\n        </Card.Title>\n        <Card.Text className=\"text-center\">\n          <div className=\"button-container\">\n            <button\n              id=\"button\"\n              className={`button ${isFavouritePage ? \"added\" : \"removed\"}`}\n              onClick={\n                isFavouritePage ? removeMovieFromFavourite : addMovieToFavourite\n              }\n            >\n              {isFavouritePage ? \"Remove from favourite\" : \"Add to favourite\"}\n              <div className=\"button__horizontal\"></div>\n              <div className=\"button__vertical\"></div>\n            </button>\n          </div>\n        </Card.Text>\n      </Card.Body>\n    </Card>\n  );\n};\n\nexport default MovieListItem;\n","E:\\VSCode Files\\Making-React-App\\IndustrialProject\\ShrishtiSaxena\\G2B7_ReactJS_GradedProject4-main\\client\\src\\services\\movies.ts",[],[],"E:\\VSCode Files\\Making-React-App\\IndustrialProject\\ShrishtiSaxena\\G2B7_ReactJS_GradedProject4-main\\client\\src\\component\\common\\LoadingIndicator.tsx",[],[],{"ruleId":"61","severity":1,"message":"62","line":1,"column":10,"nodeType":"63","messageId":"64","endLine":1,"endColumn":18},{"ruleId":"61","severity":1,"message":"65","line":2,"column":10,"nodeType":"63","messageId":"64","endLine":2,"endColumn":25},{"ruleId":"61","severity":1,"message":"66","line":9,"column":10,"nodeType":"63","messageId":"64","endLine":9,"endColumn":14},{"ruleId":"61","severity":1,"message":"67","line":13,"column":10,"nodeType":"63","messageId":"64","endLine":13,"endColumn":32},{"ruleId":"61","severity":1,"message":"68","line":97,"column":11,"nodeType":"63","messageId":"64","endLine":97,"endColumn":23},{"ruleId":"61","severity":1,"message":"69","line":67,"column":13,"nodeType":"63","messageId":"64","endLine":67,"endColumn":17},"@typescript-eslint/no-unused-vars","'faSearch' is defined but never used.","Identifier","unusedVar","'FontAwesomeIcon' is defined but never used.","'Link' is defined but never used.","'TouchableHighlightBase' is defined but never used.","'currentImgId' is defined but never used.","'data' is assigned a value but never used."]